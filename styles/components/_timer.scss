@use "../core/index" as core;

// タイマー見た目全体共通
body {
  color: var(--timer-main-color);

  span.icon-size {
    font-size: core.$icon-size;
  }

  .timer {
    width: 100%;
    min-height: 340px;
    margin: 0 auto;
    padding: 0 16px; /* 横に余白 */
  }

  .timer-deco {
    background: rgba(0, 0, 0, 0.16);
    border-radius: 16px;
    @supports (
      (backdrop-filter: blur(1px)) or (-webkit-backdrop-filter: blur(1px))
    ) {
      backdrop-filter: blur(8px) saturate(140%);
      -webkit-backdrop-filter: blur(8px) saturate(140%);
      /* うっすら境界 */
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
    }
  }

  // gridコンテナ親
  .timer-grid-container {
    display: grid;
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: 1fr;
    gap: clamp(8px, 1.5vmin, 16px);
    /* カウント → プリセット → 操作 → ボリューム、の縦並び */
    grid-template-areas:
      "count"
      "presets"
      "controls";
    /* 親要素 */
    width: 100%;
    place-content: center;
  }

  // timer grid アイテム＝カウント
  .timer1 {
    grid-area: count;
  }

  .timer-count-display {
    min-width: 5ch;
    max-width: 20vw;
    margin: 0 auto;
  }

  /* h1 カウントダウン表示 */
  .timer_count {
    display: inline-block;
    text-align: center;
    // ch は「0 の幅」を基準にした長さ
    width: 5ch;
    font-size: clamp(48px, 36.732px + 3.005vw, 80px);
    line-height: 1.2;
    background: color-mix(in oklch, var(--milk-white) 5%, transparent);
    border-radius: 0.6rem;
    padding-inline: 0.8rem;
    padding-block: 0.2rem;
    backdrop-filter: blur(3px) saturate(95%) contrast(92%);
    outline: 1px solid rgba(255, 255, 255, 0.12); /* 境界は“線”でなく“気配” */
  }

  /* 数字だけ相棒フォント + 等幅数字をON */
  .digits {
    font-family: Inter, "Zen Kaku Gothic New", "M PLUS 1p", system-ui;
    // 等幅数字（桁ごとに同じ幅）をON
    font-variant-numeric: tabular-nums; /* 等幅数字 */
    font-feature-settings: "tnum" 1; /* 念のため保険として */
    // フォントにその太さ/斜体が無いとき、ブラウザが“偽ボールド/偽イタリック”を合成するのを禁止
    font-synthesis: none; /* 擬似ボールド/イタリックを抑止して質感維持 */
    letter-spacing: 0.01em; /* “leaf.loop”の空気感に合わせて極小トラッキング */
    font-weight: 500;
    letter-spacing: 0.0125em;
    color: var(--milk-white);
    // ※ 影の数を増やすより、**半径と不透明度の“比率”**が大事。強すぎたら .03/.15/.36 くらいに全部落とす。
    text-shadow: 0 0 0.03rem rgba(255, 255, 255, 0.55),
      /* エッジの微光 */ 0 0 0.18rem rgba(255, 255, 255, 0.3),
      /* 近距離の霧 */ 0 0 0.44rem rgba(255, 255, 255, 0.18); /* 遠くのベール */
  }

  // ３・４・５分ボタン部分
  .timer2 {
    grid-area: presets;
  }

  // 操作部分
  .timer3 {
    grid-area: controls;
  }

  .timer-toggle {
    position: relative;
    inline-size: 48px;
    block-size: 48px;
    display: inline-grid;
    place-items: center;
  }
  .timer-toggle .icon {
    grid-area: 1/1;
    width: 100%;
    height: 100%;
  }
  .timer-toggle .icon-stop {
    display: none;
  }
  .timer-toggle[aria-pressed="true"] .icon-play {
    display: none;
  }
  .timer-toggle[aria-pressed="true"] .icon-stop {
    display: block;
  }

  // ボタン・グループ　（ボタン用grid親）
  .buttons {
    width: 20vw;
    margin: 0 auto;
    &span {
      display: block;
    }
  }

  button {
    margin: 0 auto;
  }

  // キーカラーに
  span,
  .button.setTimeBtn {
    color: inherit;
  }

  // 3/4/5分初期設定ボタン　子
  .setTimeBtn {
    display: flex;
    align-items: center;
    justify-content: center;
    border: 0.8px solid rgb(245 245 245 / 35%);

    /* 円の大きさ */
    width: core.$setTimeBtn-width;
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    color: inherit;
    text-align: center;
    background-color: var(--panel);
    box-shadow: 0 2px 6px rgb(0 0 0 / 15%),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
    // 追加視認性UP
    filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.25));
    /* ほんのり輪郭 */
    outline: 1px solid color-mix(in oklab, #fff 35%, transparent);
    outline-offset: -2px;
  }

  button.setTimeBtn:hover,
  button.setTimeBtn:focus-visible {
    cursor: pointer;
    // color: #110b0fa2;
    color: #606060;
    border: solid 3.27px core.$main-color;
    background-color: core.$main-color;
  }

  // 操作ボタンの背景　アイコン位置調整
  .set-buttons {
    padding: clamp(4px, 2.592px + 0.376vw, 8px) 0;
    background: rgba(245, 245, 245, 0.3);
    border: 1px solid rgba(245, 245, 245, 0.35);
    border-radius: 16px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
  }

  span.set-buttons {
    white-space: nowrap;
  }

  span.set-button {
    // 追加視認性UP
    filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.25));
    /* ほんのり輪郭 */
    outline: 1px solid color-mix(in oklab, #fff 35%, transparent);
    outline-offset: -2px;
    border-radius: 0.5rem;
  }

  span.set-button:hover {
    cursor: pointer;
    color: #606060;
  }
  // トグルでボタンが３つに
  // div.timer3 > .grid-parent-timer {
  //   grid-template-columns: repeat(4, 1fr);
  // }

  // デバッグ用通知テスト
  .timer4 {
    grid-area: volume;
    width: 20vw;
    margin: 0 auto;
    & span {
      display: block;
    }
  }

  /* スクリーンリーダー専用 */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    white-space: nowrap;
    border: 0;
  }

  /* トースト */
  .toast {
    position: absolute;
    left: 50%;
    top: 1rem;
    // bottom: 1rem;
    transform: translateX(-50%) translateY(8px);
    background: rgb(0 0 0 / 84%);
    color: #fff;
    padding: 0.5rem 1rem;
    border-radius: 0.75rem;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.25s ease, transform 0.25s ease;
    z-index: 30;
  }

  .toast.show {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }

  @media (prefers-reduced-motion: reduce) {
    .toast {
      transition: none;
    }
  }
}

// ━━━━━━

/* タイマー共通の「色・透明度・ホバー/フォーカス強度」をカスタムプロパティで持つ */
// 🌳 メイン タイマー
// centerアイテム1番目：heroタイマー
// 📍 幅1100px以上の横向き時だけ
@media screen and (width >= 1100px) and (orientation: landscape) {
  body.hero {
    // hero > main > container > item1 =
    .timer {
      max-width: 21vw;
      min-width: 21vw;
      height: auto;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .timer-grid-container {
      display: grid;
      grid-template-rows: repeat(3, 1fr);
      grid-template-rows: 3fr 1fr 1fr;
      grid-template-columns: 1fr;
      // gap: clamp(16px, 1.5vmin, 20px);
      gap: 20px;
      margin: 0 auto;
      align-items: center;
    }

    // 操作ボタンの背景　アイコン位置調整
    .set-buttons {
      padding: clamp(4px, 2.592px + 0.376vw, 8px) 0;
    }
  }
}

// ━━━━━━
// 📍📍 幅769px以上1099px以下で画面が横向きの時だけ
@media screen and (width <= 1099px) and (width >= 769px) and (orientation: landscape) {
  body.hero {
    .timer {
      padding: 0;
      min-width: 21vw;
      height: 100vh; /* PCで全画面 */
      height: 100svh; /* モバイルでアドレスバー考慮 */
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .timer-grid-container {
      display: grid;
      grid-template-rows: repeat(3, 1fr);
      grid-template-rows: 3fr 1fr 1fr;
      grid-template-columns: 1fr;
      // gap: clamp(16px, 1.5vmin, 20px);
      gap: 20px;
      margin: 0 auto;
      align-items: center;
    }
    // カウント
    .timer1 {
      margin-top: 0;
    }
    .timer_count {
      font-size: clamp(48px, 6vw, 56px);
      line-height: 1.2;
    }

    .buttons {
      width: 100%;
      margin: 0;
    }

    .set-buttons {
      padding: 0;
      border-radius: 8px;
    }
    // 操作ボタンの背景　アイコン位置調整 幅1099px以下で画面が横向きの時だけ
    span.set-button {
      font-size: 2.5rem;
    }
  }
}

// ━━━━━━

/* 縦向き：最小値をちょい上げて読みやすさ優先 */
@media screen and (width <= 1024px) and (orientation: portrait) {
  body.hero {
    .item {
      width: 100svw;
      width: 100dvw;
      min-height: auto;
      min-width: fit-content;
      padding: 16px;
      overflow: hidden;
    }
    .timer {
      width: 100vw;
      min-height: auto;
      min-width: fit-content;
      padding: 16px;
    }
    .timer-grid-container {
      display: grid;
      grid-template-rows: repeat(3, 1fr);
      grid-template-rows: 3fr 1fr 1fr;
      grid-template-columns: 1fr;
      gap: clamp(16px, 1.5vmin, 20px);
      margin: 0 auto;
      align-items: center;
    }

    .timer1 {
      margin-top: 0;
      height: auto;
    }
    .timer-count-display {
      max-width: fit-content;
    }
    // 幅を文字に合わせる
    .timer_count {
      width: max-content;
      display: block;
    }

    .buttons {
      width: 100%;
      max-width: 19rem;
      padding: 0 8px;
    }

    .timer3.buttons {
      grid-template-columns: repeat(4, clamp(3rem, 3.33vw, 5rem));
      gap: 1rem;
      padding: 0;
    }
  }
}

// ━━━━━━
// 📍📍📍 幅768px（スマホ横向き）以下
@media screen and (width <= 768px) and (orientation: landscape) {
  body.hero {
    .timer {
      padding: 0;
      min-height: 375px;
      height: 100vh; /* PCで全画面 */
      height: 100svh; /* モバイルでアドレスバー考慮 */
      display: flex;
      align-items: center;
      justify-content: center;
    }
    // 割合を変更
    .timer-grid-container {
      grid-template-rows: 2fr 1fr 1fr;
      // 無視される
      grid-area: "count" "preset" "control";
      align-items: center;
      gap: 16px;
    }

    .timer-count-display {
      max-width: fit-content;
    }

    // 中央寄せ
    .timer1,
    .timer2,
    .timer3 {
      padding: 0 16px;
    }
    // マージントップを削除
    .timer1 {
      height: auto;
      margin-top: 0;
    }
    // 幅を文字に合わせる
    .timer_count {
      width: max-content;
      display: block;
    }
    .buttons {
      width: 100%;
      padding: 0 8px;
    }
  }
}
