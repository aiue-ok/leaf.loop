@use "../core/index" as core;

/* タイマー共通の「色・透明度・ホバー/フォーカス強度」をカスタムプロパティで持つ */
// 🌳 メイン タイマー
// centerアイテム1番目：heroタイマー
//📍 幅1100px以上の時だけ
@media screen and (min-width: 1100px) {
  body.hero {
    .timer {
      color: var(--main-color);
      text-align: center;
      /* 親要素 */
      width: 100%;
      padding: 0 16px;
    }
    .timer-grid-container {
      display: grid;
      gap: clamp(8px, 2vmin, 16px);
      /* カウント → プリセット → 操作 → ボリューム、の縦並び */
      grid-template-areas:
        "count"
        "presets"
        "controls"
        "volume";
      /* 横向きで横詰めにしたい時は later で template 変えるだけ */
      text-align: center;
    }
    /* h1 カウントダウン表示 */
    // * 好みに寄せる微調整
    // * もっと小さめにしたい → 8vmin → 6.5vmin
    // * もっと大きめにしたい → 8vmin → 9vmin
    // * 4Kで暴れがちなら最大値を 56px に
    // vmin は「短いほうの辺の1%」。
    #timer {
      font-size: clamp(36px, 8vmin, 64px);
      line-height: 1.1;
      margin-bottom: 1.5rem;
    }

    .timer_count {
      grid-area: count;
      text-align: center;
      /* 画面の短辺基準で流体。最小36px、最大64px */
      font-size: clamp(36px, 8vmin, 64px);
      line-height: 1.1;
    }

    .buttons {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      grid-template-rows: 1fr;
      justify-content: center;
      align-items: center;
      column-gap: 0.6rem;
      margin-bottom: 1.2rem;
      padding: 0 8px;
      &span {
        display: block;
      }
    }
    //heroからコピー
    .buttons {
      grid-area: presets;
      display: flex;
      gap: clamp(8px, 2vmin, 12px);
      flex-wrap: wrap;
      justify-content: center;
    }
    .set-buttons {
      grid-area: controls;
      display: flex;
      gap: clamp(10px, 2.2vmin, 16px);
      justify-content: center;
      flex-wrap: wrap;
    }
    .setTimeBtn,
    .set-buttons button {
      inline-size: clamp(44px, 9vmin, 72px); /* 幅 */
      block-size: clamp(44px, 9vmin, 72px); /* 高さ */
      border-radius: 999px;
      display: grid;
      place-items: center;
      /* 中のアイコン/数字のサイズ */
      font-size: clamp(12px, 2.5vmin, 18px);
    }
    .set-buttons .material-symbols-outlined {
      font-size: clamp(20px, 4vmin, 28px);
      line-height: 1;
    }

    /* コントロールの“台座”に幅制限を付けて折返しを許可 */
    .set-buttons,
    .buttons,
    .volume-control {
      inline-size: min(92vw, 420px);
    }
    // 3/4/5分初期設定ボタン
    .setTimeBtn {
      border: solid 2.27px var(--main-color);
      border-radius: 9999px;
      line-height: 2.3rem;
      box-shadow: var(--timer-shadow);
    }

    .setTimeBtn:hover {
      background-color: var(--button-bg);
      box-shadow: var(--timer-shadow-hover);
    }

    .set-buttons {
      display: flex;
      justify-content: center;
      gap: 3.4rem;
      padding: 0.5rem 1.5rem;
      width: 17rem;
      margin: 0 auto;
      background: radial-gradient(ellipse at top, rgba(255, 255, 255, 0.08)),
        radial-gradient(ellipse at bottom, rgba(255, 255, 255, 0.3));
      background: rgba(255, 255, 255, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.35);
      border-radius: 9999px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
      backdrop-filter: blur(100px);
    }

    span.set-button {
      color: inherit;
    }

    span.set-button:hover {
      color: var(--button-bg);
      text-shadow: var(--timer-shadow-hover);
    }

    volume-control {
      border: core.$test;
      grid-area: volume;
      display: grid;
      gap: 6px;
      justify-items: center;
    }
  }
}

//📍📍 幅1099px以下で画面が横向きの時だけ
@media screen and (max-width: 1099px) and (orientation: landscape) {
  body.hero {
    .timer {
      color: var(--main-color);
      text-align: center;
      /* 親要素 */
      width: 100%;
      padding: 0 1rem;
    }

    /* h1 カウントダウン表示 */
    #timer {
      // 幅が1000px-6vwは60px、ビューポートの幅が500px-6vwは30px
      font-size: 5vw;
      // font-size: clamp(24px, 6vw, 56px);
      margin-bottom: 1.5rem;
    }

    // ボタン・グループ　（親）
    .buttons {
      display: grid;
      grid-template-columns: 3rem 3rem 3rem;
      grid-template-rows: 1fr;
      justify-content: center;
      align-items: center;
      gap: 1.5rem;
      margin: 1rem 0;
      &span {
        display: block;
      }
    }

    // 3/4/5分初期設定ボタン　子
    .setTimeBtn {
      border: solid 2.27px var(--main-color);
      min-width: 3rem;
      min-height: 3rem;
      border-radius: 50%;
      box-shadow: var(--timer-shadow);
    }

    .setTimeBtn:hover {
      background-color: var(--button-bg);
      box-shadow: var(--timer-shadow-hover);
    }

    // 操作ボタンの背景　アイコン位置調整
    .set-buttons {
      gap: 1.5rem;
      padding: 0.2rem 0;
      background: radial-gradient(ellipse at top, rgba(255, 255, 255, 0.08)),
        radial-gradient(ellipse at bottom, rgba(255, 255, 255, 0.3));
      background: rgba(255, 255, 255, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.35);
      border-radius: 9999px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
      backdrop-filter: blur(100px);
    }

    span.set-button {
      color: inherit;
    }

    span.set-button:hover {
      color: var(--button-bg);
      text-shadow: var(--timer-shadow-hover);
    }

    .volume-control {
      border: core.$test;
      width: 20vw;
      margin: 0 auto;
    }
    /* ベーススタイルに Track も合わせて設定 */
    input[type="range"] {
      -webkit-appearance: none;
      appearance: none;
      outline: none;
      cursor: pointer;
      width: 100%;
      /* Track のスタイル */
      background: var(--main-color);
      height: 8px;
      border-radius: 8px;
    }
    /* Thumb: Chrome, Safari, Opera, Edge Chromium */
    input[type="range"]::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      height: 20px;
      width: 20px;
      background-color: var(--accent-color);
      border-radius: 50%;
    }

    /* Thumb: Firefox */
    input[type="range"]::-moz-range-thumb {
      border: none;
      height: 20px;
      width: 20px;
      background-color: var(--accent-color);
      border-radius: 50%;
    }
  }
}

/* 縦向き：最小値をちょい上げて読みやすさ優先 */
@media (orientation: portrait) {
  /* h1 カウントダウン表示 */
  #timer {
    font-size: clamp(40px, 8vmin, 60px);
  }
}

//📍📍📍 幅768px（スマホ横向き）以下
@media screen and (max-width: 768px) and (orientation: landscape) {
  body.hero {
    .timer {
      color: var(--main-color);
      text-align: center;
      /* 親要素 */
      width: 100%;
      padding: 0 1rem;
    }

    /* h1 カウントダウン表示 */
    #timer {
      font-size: clamp(36px, 9vmin, 64px);
      margin-bottom: 1.5rem;
    }

    // ボタン・グループ　（親）
    .buttons {
      display: grid;
      grid-template-columns: 3rem 3rem 3rem;
      grid-template-rows: 1fr;
      justify-content: center;
      align-items: center;
      gap: 1.5rem;
      margin: 1rem 0;
      &span {
        display: block;
      }
    }

    // 3/4/5分初期設定ボタン　子
    .setTimeBtn {
      border: solid 2.27px var(--main-color);
      min-width: 3rem;
      min-height: 3rem;
      border-radius: 50%;
      box-shadow: var(--timer-shadow);
    }

    .setTimeBtn:hover {
      background-color: var(--button-bg);
      box-shadow: var(--timer-shadow-hover);
    }

    // 操作ボタンの背景　アイコン位置調整
    .set-buttons {
      // width: min(50% 18rem);
      gap: 1.5rem;
      padding: 0.2rem 0;
      margin: 0 auto;
      background: radial-gradient(ellipse at top, rgba(255, 255, 255, 0.08)),
        radial-gradient(ellipse at bottom, rgba(255, 255, 255, 0.3));
      background: rgba(255, 255, 255, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.35);
      border-radius: 9999px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
      backdrop-filter: blur(100px);
    }

    span.set-button {
      color: inherit;
      font-size: 3rem;
    }

    span.set-button:hover {
      color: var(--button-bg);
      text-shadow: var(--timer-shadow-hover);
    }

    .volume-control {
      border: core.$test;
      width: 20vw;
      margin: 0 auto;
    }
    /* ベーススタイルに Track も合わせて設定 */
    input[type="range"] {
      -webkit-appearance: none;
      appearance: none;
      outline: none;
      cursor: pointer;
      width: 100%;
      /* Track のスタイル */
      background: var(--main-color);
      height: 8px;
      border-radius: 8px;
    }
    /* Thumb: Chrome, Safari, Opera, Edge Chromium */
    input[type="range"]::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      height: 20px;
      width: 20px;
      background-color: var(--accent-color);
      border-radius: 50%;
    }

    /* Thumb: Firefox */
    input[type="range"]::-moz-range-thumb {
      border: none;
      height: 20px;
      width: 20px;
      background-color: var(--accent-color);
      border-radius: 50%;
    }
  }
}
// ⛳️ 各ページのミニタイマー
/* wordsと色を揃える系（currentColor に追従） */

.timer-mini-container,
.timer-mini-container * {
  color: currentColor;
}
/* ミニタイマー基調 */

.timer-mini-container {
  color: var(--timer-fg);
  opacity: var(--timer-opacity);
}
/* 数字だけ少しなじませる（必要なら .timer-display をHTMLに付与）*/

.timer-mini-container .timer-display {
  opacity: 0.85;
}
/* ▼▼ Hover（プリセット、セットボタン） */

.timer-mini-preset-button:hover {
  transform: scale(1.05);
  transition: all 0.2s ease;
  background-color: var(--timer-hover-bg);
  border-color: var(--timer-hover-border);
  color: var(--timer-hover-fg);
}
.timer-mini-set-button:hover {
  transform: scale(1.05);
  transition: all 0.2s ease;
  color: var(--timer-hover-bg);
  border-color: color-mix(in oklab, var(--timer-hover-bg) 50%, transparent);
  /* outlineは消すなら必ずフォーカス可視化を別途用意（下でやる）*/
  outline: none;
}
/* ▼▼ focus-visible（キーボード操作の見やすさ） */

.timer-mini-preset-button:focus-visible {
  border: 3px double var(--timer-focus-border);
  box-shadow: 0 0 8px var(--timer-focus-shadow);
  transform: scale(1.1);
}
.timer-mini-set-button:focus-visible {
  box-shadow: 0 0 0 2px var(--timer-focus-shadow);
}
.timer-mini-set-button:focus-visible span {
  color: var(--timer-focus-icon);
  transform: scale(1.1);
}
/* お好みで：動きを弱める（全体適用なら core/_a11y.scss へ） */

@media (prefers-reduced-motion: reduce) {
  .timer-mini-preset-button,
  .timer-mini-set-button {
    transition-duration: 0.001ms !important;
    transform: none !important;
  }
}
