@use "../core/index" as core;

body {
  color: var(--main-color);
  // gridコンテナ親
  .timer-grid-container {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    gap: clamp(8px, 1.5vmin, 16px);
    /* カウント → プリセット → 操作 → ボリューム、の縦並び */
    grid-template-areas:
      "count"
      "presets"
      "controls"
      "volume";
    /* 横向きで横詰めにしたい時は later で template 変えるだけ */
    /* 親要素 */
    width: 100%;
  }
  // カウント
  .timer1 {
    grid-area: count;
    height: 20dvh;
    margin-top: 25dvh;
  }

  .timer2 {
    grid-area: presets;
  }
  .timer3 {
    grid-area: controls;
  }
  .timer4 {
    grid-area: volume;
    width: 20vw;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    &span {
      display: block;
      font-size: 24px;
    }
  }

  /* h1 カウントダウン表示 */
  .timer_count {
    text-align: center;
    /* 画面の短辺基準で流体。最小48px、最大105.6px */
    // vmin は「短いほうの辺の1%」。
    font-size: clamp(3rem, 12vmin, 3.4rem);
    line-height: 1.1;
  }
  // ボタン・グループ　（ボタン用grid親）
  .buttons {
    display: grid;
    grid-template-columns: 3rem 3rem 3rem;
    grid-template-rows: 1fr;
    justify-content: center;
    align-items: center;
    gap: 5vh;
    padding: 1vw;
    text-align: center;
    &span {
      display: block;
    }
    // 3/4/5分初期設定ボタン　子
    .setTimeBtn {
      border: solid 2.27px var(--main-color);
      min-width: 3rem;
      min-height: 3rem;
      border-radius: 50%;
      box-shadow: var(--timer-shadow);
      text-align: center;
    }

    .setTimeBtn:hover {
      background-color: var(--button-bg);
      box-shadow: var(--timer-shadow-hover);
    }

    span.set-button {
      color: inherit;
    }

    span.set-button:hover {
      color: var(--button-bg);
      text-shadow: var(--timer-shadow-hover);
    }

    .volume-control {
      margin: 0 auto;
      appearance: none;
      width: 18vw;
      height: 16px;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      // background: linear-gradient(90deg, #377494 50%, #dddddd 50%);
      cursor: pointer;
    }

    /* ツマミ：Chrome, Safari, Edge用 */
    .volume-control::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 24px;
      height: 24px;
      border: 2px solid #333333;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      box-shadow: none;
    }

    /* ツマミ：Firefox用 */
    .volume-control::-moz-range-thumb {
      width: 24px;
      height: 24px;
      border: 2px solid #333333;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      box-shadow: none;
    }
  }
}

/* タイマー共通の「色・透明度・ホバー/フォーカス強度」をカスタムプロパティで持つ */
// 🌳 メイン タイマー
// centerアイテム1番目：heroタイマー
//📍 幅1100px以上の横向き時だけ
@media screen and (min-width: 1100px) and (orientation: landscape) {
  body.hero {
    // hero > main > container > item1 =
    .timer {
      max-width: 23vw;
    }
    // 操作ボタンの背景　アイコン位置調整
    .set-buttons {
      gap: 1.5rem;
      padding: 0.2rem 0;
      background: radial-gradient(ellipse at top, rgba(255, 255, 255, 0.08)),
        radial-gradient(ellipse at bottom, rgba(255, 255, 255, 0.3));
      background: rgba(255, 255, 255, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.35);
      border-radius: 9999px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
      backdrop-filter: blur(100px);
    }
  }
}

//📍📍 幅769px以上1099px以下で画面が横向きの時だけ
@media screen and (max-width: 1099px) and (min-width: 769px) and (orientation: landscape) {
  body.hero {
    .buttons {
      gap: 10px;
    }
    span.icon-size {
      font-size: 2rem;
    }
    // 操作ボタンの背景　アイコン位置調整 幅1099px以下で画面が横向きの時だけ
    .set-buttons {
      margin: 0 auto;
      padding: 4px 0;
      background: radial-gradient(ellipse at top, rgba(255, 255, 255, 0.08)),
        radial-gradient(ellipse at bottom, rgba(255, 255, 255, 0.3));
      background: rgba(255, 255, 255, 0.3);
      border: 0.8px solid rgba(255, 255, 255, 0.35);
      border-radius: 999px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
      backdrop-filter: blur(100px);
    }

    .timer4 {
      font-size: 0.9rem;
    }
    .volume-control {
      appearance: none;
      width: 12vw;
      height: 16px;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      cursor: pointer;
    }

    /* ツマミ：Chrome, Safari, Edge用 */
    .volume-control::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 24px;
      height: 24px;
      border: 2px solid #333333;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      box-shadow: none;
    }

    /* ツマミ：Firefox用 */
    .volume-control::-moz-range-thumb {
      width: 24px;
      height: 24px;
      border: 2px solid #333333;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      box-shadow: none;
    }
  }
}

/* 縦向き：最小値をちょい上げて読みやすさ優先 */
@media screen and (max-width: 1024px) and (orientation: portrait) {
  body.hero {
    .timer_count {
      margin-bottom: 2rem;
    }
    .timer1 {
      margin-top: 0;
      height: auto;
    }
    .buttons {
      // gap: 16px;
      gap: clamp(16px, 2rem, 36px);
    }
    span.icon-size {
      font-size: 2rem;
    }
    .timer4 {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      text-align: center;
      font-size: 0.9rem;
      &span.icon-size {
        display: block;
        font-size: 16px;
      }
    }
    .volume-control {
      -webkit-appearance: none;
      margin: 0 auto;
      appearance: none;
      width: 100px;
      height: 16px;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      cursor: pointer;
    }
  }
}

//📍📍📍 幅768px（スマホ横向き）以下
@media screen and (max-width: 768px) and (orientation: landscape) {
  body.hero {
    .timer1 {
      margin-top: 0;
    }
    span.icon-size {
      font-size: 2rem;
    }
    .timer4 {
      width: 30vw;
      font-size: 0.9rem;
    }
    .volume-control {
      appearance: none;
      width: 20vw;
      height: 16px;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      cursor: pointer;
    }

    /* ツマミ：Chrome, Safari, Edge用 */
    .volume-control::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 24px;
      height: 24px;
      border: 2px solid #333333;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      box-shadow: none;
    }

    /* ツマミ：Firefox用 */
    .volume-control::-moz-range-thumb {
      width: 24px;
      height: 24px;
      border: 2px solid #333333;
      border-radius: 9999px;
      backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      box-shadow: none;
    }
  }
}
// ⛳️ 各ページのミニタイマー
// 各ページタイマー
/* 共通ミニタイマー（ギャラリー/ユニバース/アバウト） */
body.gallery,
body.universe,
body.about {
  /* 共通ボタン */
  .timer .btn {
    --btn-ring: var(--main-color);
    --btn-bg: rgba(255, 255, 255, 0.12);
    --btn-bg-hover: rgba(255, 255, 255, 0.18);

    display: grid;
    place-items: center;
    inline-size: 2rem;
    block-size: 2rem; /* 丸ボタン基準 */
    border-radius: 999px;
    border: 2px solid var(--btn-ring);
    background: var(--btn-bg);
    box-shadow: var(--timer-shadow);
    color: inherit;
    cursor: pointer;
    transition: background-color 0.15s, box-shadow 0.15s, transform 0.1s;
  }

  .timer .btn:focus-visible {
    outline: 2px solid rgba(255, 255, 255, 0.9);
    outline-offset: 2px;
  }

  /* “選択中”の見た目（プリセットやミュート状態に付ける） */
  .timer .btn.is-active {
    background: var(--button-bg);
    box-shadow: var(--timer-shadow-hover);
    color: #fff;
  }

  /* プリセットは pill 形にしたい場合 */
  .timer .btn--pill {
    inline-size: auto;
    padding-inline: 0.6em;
    border-radius: 16px;
  }

  .timer {
    position: fixed;
    left: max(12px, env(safe-area-inset-left) + 12px);
    bottom: max(12px, env(safe-area-inset-bottom) + 12px);
    z-index: 5;
    opacity: var(--timer-opacity);
    color: var(--main-color);

    /* ミニカードの箱（幅を決める） */
    .timer-grid-container {
      display: grid;
      grid-template-columns: 1fr 3.2rem 3.2rem;
      grid-template-rows: auto auto; /* ← 2行にする */
      grid-template-areas:
        "count  presets controls"
        "volume volume controls";
      gap: 8px 8px;
      align-items: center;
      justify-items: center;
      inline-size: min(78vw, 360px); /* ← ミニ幅 */
      padding: 10px 12px;
      border-radius: 16px;
      backdrop-filter: blur(8px) saturate(140%);
      -webkit-backdrop-filter: blur(8px) saturate(140%);
      background: rgba(255, 255, 255, 0.16);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
        inset 0 0 0 1px rgba(255, 255, 255, 0.35);
    }

    /* カウント */
    .timer1 {
      grid-area: count;

      inline-size: 100%;
      text-align: center;
      margin-top: 0;
      height: auto;
      /* 小さめでも破綻しない流体サイズ */
      .timer_count {
        font-size: clamp(24px, 7vmin, 48px);
        line-height: 1.1;
        margin: 0;
      }
    }

    /* プリセット */
    .timer2 {
      grid-area: presets;

      inline-size: 100%;
      display: grid;
      grid-template-rows: 2rem 2rem 2rem;
      gap: 6px;
      justify-items: stretch;

      .setTimeBtn {
        min-inline-size: 3rem;
        min-block-size: 2rem;
        border-radius: 12px;
        border: 2px solid var(--main-color);
        box-shadow: var(--timer-shadow);
        text-align: center;
        font-size: 0.9rem;
      }
      .setTimeBtn:hover {
        background-color: var(--button-bg);
        box-shadow: var(--timer-shadow-hover);
      }
    }

    /* 操作ボタン列 */
    .timer3 {
      grid-area: controls;

      inline-size: 100%;
      display: grid;
      grid-template-rows: 2rem 2rem 2rem;
      gap: 6px;
      justify-items: stretch;

      button {
        min-block-size: 2rem;
        border-radius: 999px;
        display: grid;
        place-items: center;
      }
      span.icon-size {
        font-size: 1.4rem;
      }
    }

    /* 音量（ラベル＋スライダー） */
    .timer4 {
      grid-area: volume;

      inline-size: 100%;
      // inline-size: 12rem;
      /* もしくは min(45vw, 12rem) */
      display: grid;
      grid-template-columns: auto min(8rem, 36vw) auto;
      column-gap: 8px;
      align-items: center;
      gap: 8px;

      /* ← ここは `& span` か `span` */
      span {
        font-size: 0.9rem;
      }

      .timer4 .vol-icons {
        display: flex;
        gap: 6px;
        align-items: center;
      }
      .timer4 .vol-icons .material-symbols-outlined {
        font-size: 1.1rem;
        line-height: 1;
        opacity: 0.8;
      }
      /* input[type=range] をクラスでも取れるように */
      input.volume-control {
        appearance: none;
        -webkit-appearance: none;
        inline-size: 100%;
        block-size: 10px; /* 高さは本体ではなく track にも指定する */
        background: transparent; /* 本体は透明に */
        border-radius: 9999px;
        cursor: pointer;
      }

      /* WebKit: トラック */
      input.volume-control::-webkit-slider-runnable-track {
        block-size: 10px;
        border-radius: 9999px;
        background: linear-gradient(
              to right,
              var(--main-color) 0 var(--volume-fill, 60%),
              rgba(255, 255, 255, 0.2) 0
            )
            /* 任意 */,
          rgba(255, 255, 255, 0.16);
        box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      }
      /* WebKit: 親指 */
      input.volume-control::-webkit-slider-thumb {
        -webkit-appearance: none;
        inline-size: 20px;
        block-size: 20px;
        margin-top: -5px; /* 親指をトラック中央に */
        border-radius: 9999px;
        background: rgba(255, 255, 255, 0.95);
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25);
        border: 1px solid rgba(0, 0, 0, 0.25);
      }

      /* Firefox: トラック/親指 */
      input.volume-control::-moz-range-track {
        block-size: 10px;
        border-radius: 9999px;
        background: rgba(255, 255, 255, 0.16);
        box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.35);
      }
      input.volume-control::-moz-range-thumb {
        inline-size: 20px;
        block-size: 20px;
        border-radius: 9999px;
        background: rgba(255, 255, 255, 0.95);
        border: 1px solid rgba(0, 0, 0, 0.25);
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25);
      }
    }
  }
}

/* wordsと色を揃える系（currentColor に追従） */

.timer-mini-container,
.timer-mini-container * {
  color: currentColor;
}

.timer-mini-glass {
  border-radius: 16px;
  border: 1px solid rgb(255 255 255 / 20%); // 境界線を少し光らせる
  border-radius: 1rem;
  box-shadow: 0 4px 10px rgb(0 0 0 / 20%);
  background: rgba(245, 245, 245, 0.4);
  color: inherit;
  transition: background 0.3s ease, filter 0.3s ease;
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);

  &:hover {
    background: rgb(255 255 255 /70%);
    outline: none; // ブラウザのデフォルトの青い枠を消す
    filter: brightness(1) contrast(1.05) saturate(1.05);
  }
}

@media (prefers-reduced-motion: reduce) {
  .timer-mini-preset-button,
  .timer-mini-set-button {
    transition-duration: 0.001ms !important;
    transform: none !important;
  }
}

@media (hover: hover) {
  .timer .btn:hover {
    background: var(--btn-bg-hover);
    box-shadow: var(--timer-shadow-hover);
    transform: translateY(-1px);
  }
}
