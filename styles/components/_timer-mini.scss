@use "../core/index" as core;

body.gallery,
body.universe,
body.about {
  // ここからギャラリー専用タイマ
  .timer-mini-container {
    position: var(--timer-position);
    left: var(--timer-left);
    bottom: var(--timer-bottom);
    //   w360px h180px　ビューポートに依る
    //   width: 22.5rem;height: 11.25rem;
    width: clamp(360px, 25vw, 380px);
    height: max(180px, 17.58vh);
    z-index: core.$z-timer-mini;
  }

  // 背景
  .timer-mini-background {
    border-radius: var(--timer-border-radius);
    border: var(--timer-border);
    box-shadow: var(--timer-box-shadow);
    background: var(--timer-background);
    transition: b 0.3s ease, filter 0.3s ease;
    backdrop-filter: var(--timer-backdrop-filter);
    -webkit-backdrop-filter: var(--timer--webkit-backdrop-filter);
    &:hover {
      background: var(--timer-hover-background);
      outline: none; // ブラウザのデフォルトの青い枠を消す
      backdrop-filter: blur(8.5px) saturate(130%);
      -webkit-backdrop-filter: blur(8.5px) saturate(130%);
    }
  }

  // ミニタイマー font色
  .timer-mini-container,
  .timer-count {
    // color: rgb(80 60 60 / 70%);
    color: var(--timer-main-color);
    text-shadow: var(--timer-shadow);
  }
  /* アイコンサイズを上書きする */
  span.icon-size {
    font-size: var(--timer-mini-icon-size);
  }

  button {
    cursor: pointer;
  }

  /*  === grid ===  */
  .timer-mini-box {
    display: grid;
    grid-template-columns: 1fr 3.2rem 3.2rem;
    grid-template-rows: auto auto; /* ← 2行にする */
    grid-template-areas:
      "count  presets controls"
      "volume presets controls";
    gap: var(--gap-g-button);
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    padding: 0 1.4rem;
    // 上下0px 左右22.4px
  }

  /*  === アイテム１ーカウントダウン表示  === */
  .timer-mini-countdown-text {
    grid-area: count;
    display: block;
    font-size: var(--timer-count-font-size);
    text-shadow: var(--timer-shadow2);
    text-align: center;
    inline-size: max-content;
    margin: 0 auto;
  }

  /*  === アイテム２ー3/4/5 === */
  /*  === プリセット・タイマー 親  === */
  .timer-mini-preset-parent {
    grid-area: presets;
    display: grid;
    grid-template-rows: 1fr 1fr 1fr;
    align-items: center;
    justify-content: center;
    gap: var(--gap-g-button);
    text-align: center;
  }

  .timer-mini-preset-button {
    /* 円の大きさ */
    width: var(--timer-mini-width);
    aspect-ratio: var(--timer-mini-aspect-ratio);
    border-radius: var(--timer-mini-border-radius);
    background-color: transparent;
    border: solid var(--timer-mini-border-width) var(--timer-main-color);
    box-shadow: var(--timer-shadow);
    text-align: center;
    /* フォントサイズは直径に比例 */
    font-size: var(--timer-mini-preset-font-size);
    color: var(--timer-color);
    text-shadow: var(--timer-shadow2);
    box-sizing: border-box;
  }

  .timer-mini-preset-button:hover {
    color: inherit;
    border: solid var(--timer-mini-border-width) var(--timer-border-color);
    background-color: var(--timer-mini-preset-background-hover);
    outline: none; // ブラウザのデフォルトの青い枠を消す
  }

  .timer-mini-preset-button:focus-visible,
  .timer-mini-set-parent button:focus-visible {
    color: var(--timer-button-focus-visible-border-color);
    font-weight: bold;
    border-color: var(--timer-button-focus-visible-border-color); // 少し濃く
    box-shadow: var(--timer-button-focus-visible-box-shadow);
  }

  /* タイマー操作部分 div 親 */
  .timer-mini-set-parent {
    grid-area: controls;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--gap-g-button);
  }

  /* タイマー操作部分 div 子 */
  .timer-mini-set-button {
    flex: auto;
    // line-height: 2rem;
    transition: all 0.18s ease;
    /* 円の大きさ */
    aspect-ratio: var(--timer-mini-aspect-ratio);
    border-radius: var(--timer-mini-border-radius);
    background-color: var(--timer-color);
    box-shadow: var(--timer-shadow);
    text-align: center;
  }

  .timer-mini-set-button:hover {
    color: var(--timer-color-hover);
    //   text-shadow: var(--timer-shadow-hover);
    outline: none; // ブラウザのデフォルトの青い枠を消す
  }
  /* 音量（ラベル＋スライダー） */
  .timer-mini-volume {
    grid-area: volume;
    inline-size: var(--timer-mini-inline-size);
    display: grid;
    grid-template-columns: min(6rem, 36vw) auto;
    align-items: center;
    justify-content: end;
    gap: var(--gap-g-button);
  }

  span.vol-label {
    font-size: var(--timer-mini-vol-label-font-size);
  }

  .volume-control {
    -webkit-appearance: none;
    margin: 0 auto;
    appearance: none;
    width: 18vw;
    height: 16px;
    border-radius: 9999px;
    backdrop-filter: blur(8px) saturate(140%);
    background: rgba(255, 255, 255, 0.16);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
      inset 0 0 0 1px rgba(255, 255, 255, 0.35);
    cursor: pointer;
  }

  /* input[type=range] をクラスでも取れるように */
  input.volume-control {
    appearance: none;
    -webkit-appearance: none;
    inline-size: 100%;
    block-size: 10px; /* 高さは本体ではなく track にも指定する */
    background: transparent; /* 本体は透明に */
    border-radius: 9999px;
    cursor: pointer;
  }

  /* ツマミ：Chrome, Safari, Edge用 */
  .volume-control::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 24px;
    height: 24px;
    border: 2px solid #333333;
    border-radius: 9999px;
    backdrop-filter: blur(8px) saturate(140%);
    background: rgba(255, 255, 255, 0.16);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
      inset 0 0 0 1px rgba(255, 255, 255, 0.35);
    box-shadow: none;
  }

  /* ツマミ：Firefox用 */
  .volume-control::-moz-range-thumb {
    width: 24px;
    height: 24px;
    border: 2px solid #333333;
    border-radius: 9999px;
    backdrop-filter: blur(8px) saturate(140%);
    background: rgba(255, 255, 255, 0.16);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25),
      inset 0 0 0 1px rgba(255, 255, 255, 0.35);
    box-shadow: none;
  }
  /* WebKit: トラック */
  input.volume-control::-webkit-slider-runnable-track {
    block-size: 10px;
    border-radius: 9999px;
    background: linear-gradient(
          to right,
          var(--timer-main-color) 0 var(--volume-fill, 60%),
          rgba(255, 255, 255, 0.2) 0
        )
        /* 任意 */,
      rgba(255, 255, 255, 0.16);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.35);
  }
  /* WebKit: 親指 */
  input.volume-control::-webkit-slider-thumb {
    -webkit-appearance: none;
    inline-size: 20px;
    block-size: 20px;
    margin-top: -5px; /* 親指をトラック中央に */
    border-radius: 9999px;
    background: rgba(255, 255, 255, 0.95);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25);
    border: 1px solid rgba(0, 0, 0, 0.25);
  }
  /* Firefox: トラック/親指 */
  input.volume-control::-moz-range-track {
    block-size: 10px;
    border-radius: 9999px;
    background: rgba(255, 255, 255, 0.16);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.35);
  }
  input.volume-control::-moz-range-thumb {
    inline-size: 20px;
    block-size: 20px;
    border-radius: 9999px;
    background: rgba(255, 255, 255, 0.95);
    border: 1px solid rgba(0, 0, 0, 0.25);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25);
  }
}

// ７４４px〜1080px タブレット　portrait　サイズ
@media (min-width: 744px) and (max-width: 1080px) and (orientation: portrait) {
  body.gallery,
  body.universe,
  body.about {
    /* 1) ハンバーガー：左上に固定（安全域対応） */
    .hamburger {
      position: fixed;
      top: calc(env(safe-area-inset-top, 0px) + 8px);
      left: 8px;
      z-index: 120; /* タイマーより上、メニューより下で調整 */
      inline-size: 44px;
      block-size: 44px; /* ヒット面 */
      display: grid;
      place-items: center;
      background: core.$test-bg1;
    }

    /* 2) タイマー帯（上部固定／左右16pxの余白を確保） */
    /* 位置と器の大きさ：ここが“効く”幅 */
    .timer-mini-container {
      position: fixed;
      top: calc(env(safe-area-inset-top, 0px) + 8px);
      right: calc(env(safe-area-inset-top, 8px) + 8px);
      left: auto;
      bottom: unset;
      z-index: 100;
      /* スマホでもはみ出さないように器の上限だけ決める */
      inline-size: auto; /* 内容に合わせる */
      /* 器をゆるく（広めに） */
      max-inline-size: clamp(320px, 70vw, 560px);
      max-block-size: clamp(72px, 1svh, 80px);
      pointer-events: none; /* 下を触れるように。中身で戻す */
    }

    /* 3) 中身を右寄せ・狭い所は1段、広がったら2段へ */
    .timer-mini-box {
      pointer-events: auto;
      display: flex;
      flex-wrap: nowrap; /* ← 1段に固定 */
      justify-content: flex-end; /* 右寄せ */
      column-gap: 0.5rem;
      row-gap: 0;
      align-items: center;
    }
    .timer-mini-countdown-text {
      order: 1;
    }
    .timer-mini-preset-parent {
      order: 2;
      flex: 0 0 auto;
      display: inline-flex;
      gap: 0.4rem;
    }
    .timer-mini-set-parent {
      order: 3;
      flex-basis: 100%;
      flex: 0 0 auto;
      display: inline-flex;
      gap: 0.25rem;
    }
    .timer-mini-volume {
      order: 4;
      flex-basis: 100%;
      display: inline-flex;
      gap: 0.25rem;
    }
    // 背景
    .timer-mini-background {
      border-radius: var(--timer-border-radius-mobile);
      border: var(--timer-border);
      box-shadow: var(--timer-box-shadow);
      background: var(--timer-background);
      transition: background 0.3s ease, filter 0.3s ease;
      backdrop-filter: var(--timer-backdrop-filter);
      -webkit-backdrop-filter: var(--timer--webkit-backdrop-filter);
      &:hover {
        background: var(--timer-hover-background);
        outline: none; // ブラウザのデフォルトの青い枠を消す
        backdrop-filter: blur(8.5px) saturate(130%);
        -webkit-backdrop-filter: blur(8.5px) saturate(130%);
      }

      /* ヒット面44px＋視覚28px（ズレない版） */
      .timer-mini-preset-button {
        --visual: 28px;
        --hit: 44px;
        position: relative;
        display: inline-flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        inline-size: var(--visual);
        block-size: var(--visual);
        line-height: 1;
        border-radius: var(--timer-border-radius-mobile);
      }
      .timer-mini-preset-button::after {
        content: "";
        position: absolute;
        left: 50%;
        top: 50%;
        width: var(--icon-hit);
        height: var(--icon-hit);
        transform: translate(-50%, -50%);
      }
      .timer-mini-countdown-text {
        font-size: var(--timer-count-font-size-mobile);
        line-height: 1; /* ←これで上下の余白をカット */
        margin: 0 auto;
      }
      .timer-mini-container span.icon-size,
      span.timer-mini-set-button,
      span.mute {
        font-size: var(--timer-mini-icon-size-mobile);
      }
      .timer-mini-set-parent {
        grid-area: controls;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: var(--gap-g-button);
      }
      .timer-mini-volume input[type="range"] {
        inline-size: clamp(120px, 15vw, 200px);
      }
    }
  }
}

/* スマホ（～390pxあたり） */
@media (max-width: 743px) and (orientation: portrait) {
  body.gallery,
  body.universe,
  body.about {
    /* 1) ハンバーガー：左上に固定（安全域対応） */
    .hamburger {
      position: fixed;
      top: calc(env(safe-area-inset-top, 0px) + 8px);
      left: 8px;
      z-index: 120; /* タイマーより上、メニューより下で調整 */
      inline-size: 44px;
      block-size: 44px; /* ヒット面 */
      display: grid;
      place-items: center;
      background: core.$test-bg1;
    }

    /* 2) タイマー帯（上部固定／左右16pxの余白を確保） */
    /* 位置と器の大きさ：ここが“効く”幅 */
    .timer-mini-container {
      position: fixed;
      top: calc(env(safe-area-inset-top, 0px) + 8px);
      right: calc(env(safe-area-inset-top, 8px) + 8px);
      left: auto;
      bottom: unset;
      z-index: 100;
      height: auto;
      /* スマホでもはみ出さないように器の上限だけ決める */
      inline-size: auto; /* 内容に合わせる */
      max-inline-size: clamp(220px, 60vw, 270px);
      max-block-size: clamp(96px, 17svh, 120px);
      pointer-events: none; /* 下を触れるように。中身で戻す */
    }

    /* 3) 中身を右寄せ・狭い所は1段、広がったら2段へ */
    .timer-mini-box {
      pointer-events: auto;
      display: grid;
      grid-template-columns: 1fr auto; /* 左=時間／右=操作 */
      grid-template-rows: auto auto; /* 上=時間+操作／下=プリセット */
      grid-template-areas:
        "count  presets controls"
        "volume presets controls";
      gap: 0.05rem 0.5rem;
      align-items: center;
    }

    // 背景
    .timer-mini-background {
      border-radius: var(--timer-border-radius-mobile);
      border: var(--timer-border);
      box-shadow: var(--timer-box-shadow);
      background: var(--timer-background);
      transition: background 0.3s ease, filter 0.3s ease;
      backdrop-filter: var(--timer-backdrop-filter);
      -webkit-backdrop-filter: var(--timer--webkit-backdrop-filter);
      &:hover {
        background: var(--timer-hover-background);
        outline: none; // ブラウザのデフォルトの青い枠を消す
        backdrop-filter: blur(8.5px) saturate(130%);
        -webkit-backdrop-filter: blur(8.5px) saturate(130%);
      }
      .timer-mini-preset-parent {
        min-height: 0;
        align-self: center;
        row-gap: 4px;
      }
      /* ヒット面44px＋視覚28px（ズレない版） */
      .timer-mini-preset-button {
        --visual: 28px;
        --hit: 44px;
        position: relative;
        display: inline-flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        inline-size: var(--visual);
        block-size: var(--visual);
        line-height: 1;
        border: solid 1px var(--timer-main-color);
        border-radius: var(--timer-border-radius-mobile);
      }
      .timer-mini-preset-button::after {
        content: "";
        position: absolute;
        left: 50%;
        top: 50%;
        width: var(--icon-hit);
        height: var(--icon-hit);
        transform: translate(-50%, -50%);
      }
      .timer-mini-countdown-text {
        font-size: var(--timer-count-font-size-mobile);
        margin: 0 auto;
        min-height: 0;
        align-self: center;
      }
      .timer-count {
        line-height: 1.2;
      }
      .timer-mini-container span.icon-size,
      span.timer-mini-set-button,
      span.mute {
        font-size: var(--timer-mini-icon-size-mobile);
      }

      .setTimeBtn:active,
      .timer-ctrl__btn:active {
        transform: translateY(0.5px) scale(0.98);
        filter: saturate(115%);
        transition: transform 0.08s ease-out;
      }

      .timer-mini-countdown-text {
        min-height: 0;
        align-self: center;
      }
      .timer-count {
        line-height: 1.2;
      }
      .timer-mini-preset-parent {
        min-height: 0;
        align-self: center;
        row-gap: 4px;
      }
      .timer-mini-preset-button {
        border: solid 1px var(--timer-main-color);
      }
      .timer-mini-set-parent {
        min-height: 0;
        align-self: center;
        row-gap: 4px;
      }
      .timer-mini-volume {
        inline-size: var(--timer-mini-inline-size);
        // grid-template-columns: min(6rem, 25vw) auto;
        align-items: center;
        justify-content: end;
        min-height: 0;
        align-self: center;
      }

      span.vol-label {
        font-size: var(--timer-mini-vol-label-font-size);
        line-height: 1;
      }
    }
  }
}
// @media (width >= 744px) and (width <= 1080px) and (orientation: portrait) {
//   .timer-mini-box {
//     flex-wrap: nowrap;
//     justify-content: flex-end;
//   }
//   .timer-mini-volume input[type="range"] {
//     inline-size: clamp(120px, 22vw, 200px);
//   }
// }
