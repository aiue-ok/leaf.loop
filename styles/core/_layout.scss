// 余白・中央寄せ・共通コンテナなどレイアウト共通部分
// 高さはなるべく縛らない、幅は拡げすぎない」

// 中央寄せ
.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// 💡 1. 横幅：基本は % や max-width
.container-off {
  width: 100%;
  max-width: 1200px; /* デスクトップで広がりすぎないように制限 */
  margin: 0 auto;
  padding: 0 16px; /* 横に余白 */
}

// これだけで モバイル〜デスクトップまで柔軟に拡がる幅が作れます。

// 💡 2. 高さ：できるだけ「中身に任せる」
.section {
  padding: 80px 0;
}

// * これは高さを「固定」してないけど、見た目は安定して見える
// * 中に入れるテキスト・画像が自然に高さを決めてくれる

// 💡 3. 高さを画面いっぱいにしたいときだけ、100vh or 100svh
.fullscreen-section {
  height: 100vh; /* PCで全画面 */
  height: 100svh; /* モバイルでアドレスバー考慮 */
  display: flex;
  align-items: center;
  justify-content: center;
}

.grid-parent-timer {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: auto;
  justify-content: center;
  align-items: center;
}

.flex-parent {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin: 0 1rem;
  text-align: center;
}

/* iOSノッチ配慮（任意） */
@supports (padding: max(0px)) {
  body.hero .container {
    padding-left: max(clamp(12px, 2vw, 28px), env(safe-area-inset-left));
    padding-right: max(clamp(12px, 2vw, 28px), env(safe-area-inset-right));
  }
  body.hero .hero__slot {
    padding-left: max(clamp(12px, 2vw, 28px), env(safe-area-inset-left));
    padding-right: max(clamp(12px, 2vw, 28px), env(safe-area-inset-right));
  }
}

// SCSS（ブレイクポイント＋向きで切替）メモ
@media screen and (orientation: landscape) {
}

// 📍 幅1100px以上の横向き時だけ
@media screen and (width >= 1100px) and (orientation: landscape) {
  body.hero {
  }
}

// 📍📍 幅769px以上1099px以下で画面が横向きの時だけ
@media screen and (width <= 1099px) and (width >= 769px) and (orientation: landscape) {
  body.hero {
  }
}

// 幅1024px（スマホたて向き）以下
@media (width <= 1024px) and (orientation: portrait) {
  body.hero {
  }
}

// 📍📍📍 幅768px（スマホ横向き）以下
@media screen and (width <= 768px) and (orientation: landscape) {
  @media (orientation: landscape) and (max-width: 736px) {
    :root {
      --safe-top: env(safe-area-inset-top, 0px);
      --safe-bottom: env(safe-area-inset-bottom, 0px);
      --safe-left: env(safe-area-inset-left, 0px);
      --safe-right: env(safe-area-inset-right, 0px);
    }

    body.hero {
      padding: max(0.5rem, var(--safe-top)) max(1rem, var(--safe-right))
        max(0.75rem, var(--safe-bottom)) max(1rem, var(--safe-left));
      min-height: 100dvh; /* ここもdvh */
    }
  }
}

/* override: 対応ブラウザでは dvh を上書き（ベースの後に置く） */
@supports (height: 100dvh) {
  // 旧　消す方
  .hero .container {
    min-height: 100dvh;
  }

  // 新　残す方
  .hero .hero__grid {
    min-height: 100dvh;
  }
}
