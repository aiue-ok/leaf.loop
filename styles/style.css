@charset "UTF-8";
@supports (height: 1dvh) {
  :root {
    --vh: 1dvh;
  } /* 新しいdvhが使える環境では上書き */
}
:root {
  /* まずはビューポート単位のフォールバック変数 */
  --vh: 1svh;
  /* ベース文字 */
  /* 和文はZen Kakuを第一候補、落ちても見栄えの良いシステム和文で */
  --ff-jp: "Zen Kaku Gothic New", "Hiragino Kaku Gothic ProN",
    "Yu Gothic Medium", "Yu Gothic", "Meiryo", system-ui, -apple-system,
    "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  /* 欧文/数字はInterを第一候補に */
  --ff-en: "Inter", system-ui, -apple-system, "Segoe UI", Roboto, Arial,
    sans-serif;
  /* 見出しの柔らかい表情用（必要な所だけに限定） */
  --ff-marui: "Kiwi Maru", "M PLUS 1p", var(--ff-jp);
  --fs: clamp(16px, 1.111vw, 32px);
  --text-hero: clamp(1.125rem, 1.0585rem + 0.2128vw, 1.25rem);
  /* 余白（例：内側パディング 16→32） */
  --pad: clamp(16px, 1.111vw, 32px);
  --safe-top: env(safe-area-inset-top, 0px);
  --safe-bottom: env(safe-area-inset-bottom, 0px);
  --safe-left: env(safe-area-inset-left, 0px);
  --safe-right: env(safe-area-inset-right, 0px);
  /* 行間なども同様に */
  --space-2: 1rem;
  --gap: clamp(8px, 0.7vw, 16px);
  --hero-veil: 0.4;
  --yanagi-alpha: 0.18;
  --tile-min-h: clamp(56px, 10svh, 128px);
  /* night-indigo 上で映える柔白（OKLCH） */
  --milk-white: oklch(96% 0.01 110deg); /* #fffより柔らかい */
  --stroke: rgb(255 255 255 / 20%); /* 0.30 → 0.20 に */
  --panel: color-mix(in oklch, var(--milk-white) 6%, rgb(0 0 0 / 15%));
  --chip-bg: rgb(255 255 255 / 8%);
  --chip-bg-active: rgb(255 255 255 / 18%);
  --chip-bd: rgb(255 255 255 / 55%);
  --chip-bd-active: rgb(255 255 255 / 85%);
  /* Theme: default = charcoal leaf */
  --help-bg: rgb(12 14 16 / 78%);
  --help-fg: #eaeaea;
  --help-h: #fff;
  --help-border: rgb(255 255 255 / 12%);
  --help-icon: #b4d2ea;
  --glass-border: rgb(255 255 255 / 18%);
  --glass-blur: 6px;
  --glass-shadow: 0 8px 24px rgb(0 0 0 / 25%);
  --focus-ring: #f5f5f5;
  --focus-ring-width: 2px;
  --focus-ring-offset: 2px;
}

/* フォントサイズは直径に比例 */
/* 例：tok.$accent-rgb を CSS変数へ落としたと仮定 */
/* 使う場所で OKLCH に変換して指定する */
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
}

html {
  font-family: var(--ff-jp);
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  font-size: 16px;
  text-size-adjust: 100%;
}

/* HTMLとbodyの高さを100%に設定 */
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  overflow-x: hidden;
  overflow-y: scroll;
  scroll-snap-type: y mandatory; /* スクロールでパチッと止まる */
}

@supports (overflow-x: clip) {
  html,
  body {
    overflow-x: clip;
  } /* clipの方がわずかに安全 */
}
a {
  text-decoration: none;
  color: inherit;
}

a:hover {
  text-decoration: underline;
}

button,
input {
  all: unset;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Zen Maru Gothic: CSS class */
.zen-maru-gothic-regular {
  font-family: "Zen Maru Gothic", sans-serif;
  font-weight: 400;
  font-style: normal;
}

/* Zen Kaku Gothic New: CSS class */
.zen-kaku-gothic-new-light {
  font-family: "Zen Kaku Gothic New", sans-serif;
  font-weight: 300;
  font-style: normal;
}

.zen-kaku-gothic-new-regular {
  font-family: "Zen Kaku Gothic New", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.zen-kaku-gothic-new-bold {
  font-family: "Zen Kaku Gothic New", sans-serif;
  font-weight: 700;
  font-style: normal;
}

/* Kiwi Maru: CSS class */
.kiwi-maru-regular {
  font-family: "Kiwi Maru", serif;
  font-weight: 200;
  font-style: normal;
}

/* Zen Kurenaido: CSS class */
.zen-kurenaido-regular {
  font-family: "Zen Kurenaido", sans-serif;
  font-weight: 400;
  font-style: normal;
}

/* M PLUS 1p */
.m-plus-1p-regular {
  font-family: "M PLUS 1p", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.font {
  font-family: "游ゴシック体", "ヒラギノ角ゴ ProN", "メイリオ", sans-serif;
  font-weight: 300;
  margin: 0;
}

/* タイマー操作部分のgoogleアイコン */
/* アイコンサイズを上書きする */
/* 汎用アイコンの基本 */
.i {
  display: inline-block;
  vertical-align: -0.125em;
}

/* サイズ違いが欲しい時 */
.i.i-24 {
  width: 24px;
  height: 24px;
}

.i.i-32 {
  width: 32px;
  height: 32px;
}

.i.i-44 {
  width: 44px;
  height: 44px;
}

/* base.scss の下の方に追加（all:unset の“あと”に書く） */
input[type=checkbox] {
  all: revert; /* 既定のUIに戻す */
  accent-color: var(--accent, #78c37b); /* チェック色だけ合わせる */
  width: 1.1rem;
  height: 1.1rem; /* ほんの少し統一（レイアウトは変えない） */
}

/* 既定は非表示 */
.notify-controls[hidden] {
  display: none;
}

/* デバッグ時だけ出したいなら：html[data-debug="1"]
.notify-controls { display:flex } */
:html[data-debug="1"] .notify-controls {
  display: flex;
}

.notify-controls {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  justify-content: left;
  position: relative;
  z-index: 2; /* オーバーレイより前 */
  padding: 12px;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 12px;
  background: rgba(0, 0, 0, 0.15);
  backdrop-filter: blur(6px);
}

.help-button-look {
  background-color: #f5f5f5;
  color: #0a0a0a;
  padding: 8px 24px;
  border: none;
  border-radius: 6px;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.explanation p {
  width: 100%;
}

.label-box {
  display: flex;
  justify-content: stretch;
  align-items: center;
  gap: 1rem;
}

/* 共通チップ */
.chip {
  display: inline-flex;
  align-items: center;
  gap: 10px;
  min-height: 44px;
  padding: 10px 16px;
  border-radius: 9999px;
  border: 1px solid var(--chip-bd);
  background: var(--chip-bg);
  color: #fff;
  text-decoration: none;
  line-height: 1.2;
  font-size: 16px;
}

/* 入力本体は見せないがフォーカスは可視化 */
.chip > input {
  position: absolute;
  inset: 0;
  opacity: 0;
  pointer-events: auto; /* ラベル全体クリック可 */
}

.chip:focus-within {
  outline: 2px solid #fff;
  outline-offset: 3px;
}

/* チェック状態の見た目（Safari OK） */
.chip:has(input:checked) {
  background: var(--chip-bg-active);
  border-color: var(--chip-bd-active);
}

/* テストボタンも同じ見た目に */
.chip--action {
  cursor: pointer;
  border: 1px solid var(--chip-bd-active);
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1));
}

.chip--action:active {
  transform: translateY(1px);
}

/* アイコンはお好みで小さめに */
.chip__icon {
  font-size: 20px;
}

.timer4 span.chip__text {
  display: none;
}

@media screen and (orientation: portrait) {
  .notify-controls {
    margin: 24px;
  }
  .timer4 span.chip__text {
    display: none;
  }
  .test-button-box {
    width: 100%;
    margin: 0 auto;
  }
}
.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* テキスト共通中央寄せ */
.text {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.section {
  padding: 80px 0;
}

.fullscreen-section {
  height: 100vh; /* PCで全画面 */
  height: 100svh; /* モバイルでアドレスバー考慮 */
  display: flex;
  align-items: center;
  justify-content: center;
}

.grid-parent-timer {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: auto;
  justify-content: center;
  align-items: center;
}

.flex-parent {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin: 0 1rem;
  text-align: center;
}

/* iOSノッチ配慮（任意） */
@supports (padding: max(0px)) {
  body.hero .hero__slot {
    padding-left: max(clamp(12px, 2vw, 28px), env(safe-area-inset-left));
    padding-right: max(clamp(12px, 2vw, 28px), env(safe-area-inset-right));
  }
}
@media screen and (width <= 768px) and (orientation: landscape) and (orientation: landscape) and (max-width: 736px) {
  :root {
    --safe-top: env(safe-area-inset-top, 0px);
    --safe-bottom: env(safe-area-inset-bottom, 0px);
    --safe-left: env(safe-area-inset-left, 0px);
    --safe-right: env(safe-area-inset-right, 0px);
  }
  body.hero {
    padding: max(0.5rem, var(--safe-top)) max(1rem, var(--safe-right)) max(0.75rem, var(--safe-bottom)) max(1rem, var(--safe-left));
    min-height: 100dvh; /* ここもdvh */
  }
}
/* override: 対応ブラウザでは dvh を上書き（ベースの後に置く） */
@supports (height: 100dvh) {
  .hero .hero__grid {
    min-height: 100dvh;
  }
}
@supports (font-synthesis-weight: none) {
  /* ブラウザの自動太字合成で揺れないように */
  html {
    font-synthesis-weight: none;
  }
}
/* 1) ベース：全体のモーションを弱める（最初に置く） */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    /* 0.001ms ハックでもOK。JSの transitionend を必要としないなら 0s でも可 */
    animation-duration: 0s !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0s !important;
  }
}
/* 2) 非必須アニメーションは “完全停止” （ベースの後に置く） */
@media (prefers-reduced-motion: reduce) {
  .bg-fade,
  .parallax,
  .word-dissolve {
    animation: none !important;
    transition: none !important;
  }
}
/* 3) ヒーロー動画は切ってポスター優先（同じく後に置く） */
@media (prefers-reduced-motion: reduce) {
  .hero__media-video {
    display: none !important;
  }
  .hero__media-poster {
    display: block !important;
  } /* 念のため明示 */
}
/* 画面が広い＋動きOKなら動画を解禁 */
/* stylelint-disable-next-line media-feature-range-notation */
@media (width >= 768px) and (prefers-reduced-motion: no-preference) {
  .hero__media-video {
    display: block;
  }
  .hero__media-poster {
    display: none;
  }
}
/* 動きを控えたい人の設定を尊重 */
@media (prefers-reduced-motion: reduce) {
  .hero__media-video {
    display: none;
  }
  .hero__media-poster {
    display: block;
  }
}
/* 動画を控えめにしたいとき（設定済みならそのまま） */
@media (prefers-reduced-motion: reduce) {
  #background-video {
    display: none !important;
  }
}
/* 視覚的に隠すがスクリーンリーダーには届く */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  clip: rect(0 0 0 0);
  overflow: hidden;
}

button,
.timer-controls button {
  min-width: 44px;
  min-height: 44px;
}

input[type=range] {
  height: 16px;
}

/* ベース：フォーカス可能要素 */
:where(a, button, [role=button], input, select, textarea, summary) {
  outline: none; /* 自前で制御 */
}

/* まずは :focus-visible */
:where(a,
button,
[role=button],
input,
select,
textarea,
summary):focus-visible {
  outline: var(--focus-ring-width) solid var(--focus-ring);
  outline-offset: var(--focus-ring-offset);
  /* 影の補助（任意） */
  box-shadow: 0 0 0 calc(var(--focus-ring-width) + 1px) color-mix(in lab, var(--focus-ring) 35%, transparent);
}

/* Safariやマウス操作向けの保険（必要ならON） */
:where(a, button, [role=button], input, select, textarea, summary):focus {
  outline: var(--focus-ring-width) solid var(--focus-ring);
  outline-offset: var(--focus-ring-offset);
}

/* motion控えめ */
@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}
/* Windows ハイコントラスト（強制色）対応 */
@media (forced-colors: active) {
  :where(a, button, [role=button], input, select, textarea, summary):focus,
  :where(a,
  button,
  [role=button],
  input,
  select,
  textarea,
  summary):focus-visible {
    outline-color: CanvasText !important;
    box-shadow: none !important;
  }
}
:focus-visible {
  outline: 3px solid rgba(255, 255, 255, 0.95);
  outline-offset: 3px;
  box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.35); /* 反転背景でも見えるよう二重 */
  border-radius: 12px;
}

/* キーボード操作にも効かせる（アクセシビリティ） */
.nav-tile:focus-visible .nav-tile__media {
  opacity: 1;
}

.nav-tile:focus-visible .nav-tile__text {
  text-decoration: underline;
  filter: brightness(1.1);
}

/* hover可能端末だけ見た目の変化を強める */
@media (hover: hover) {
  .nav-tile:hover .nav-tile__media {
    opacity: 1;
  }
  .nav-tile:hover .nav-tile__text {
    text-decoration: underline;
    filter: brightness(1.1);
  }
}
@media (hover: none), (pointer: coarse) {
  .nav-tile .nav-tile__media {
    opacity: 0.6;
  } /* 常時うっすら */
  .nav-tile:focus-visible .nav-tile__media {
    opacity: 1;
  } /* フォーカスで強調 */
}
@media (prefers-reduced-motion: reduce) {
  .bg-fade,
  .parallax,
  .word-dissolve {
    animation: none !important;
    transition: none !important;
  }
  .hero__media-video {
    display: none !important;
  } /* どうしても動くなら切る */
}
/* テキスト専用の薄い台座：レイアウトは変えない */
.contrast-pad {
  position: relative;
}

.contrast-pad::before {
  content: "";
  position: absolute;
  inset: -0.01em;
  background: rgba(0, 0, 0, 0.28); /* 初期は28%の黒ベール */
  border-radius: 0.2em;
  filter: blur(1.5px); /* 柔らかく馴染ませる（なくてもOK） */
  z-index: -1;
}

/* もっとコントラストが要る人に寄り添う */
@media (prefers-contrast: more) {
  .contrast-pad::before {
    background: rgba(0, 0, 0, 0.45);
  }
}
.pill {
  background: rgba(0, 0, 0, 0.3);
  padding: 0.15em 0.5em;
  border-radius: 999px;
}

@media (prefers-contrast: more) {
  .pill {
    background: rgba(0, 0, 0, 0.5);
  }
}
/* 文字の背後に細い帯（行の高さ分だけ） */
.contrast-underline,
.u-contrast-underline {
  display: inline-block;
  padding: 0.45em 0.8em;
  border-radius: clamp(10px, 3.5vw, 14px); /* 横向きでも過度に丸すぎない */
  /* 透明黒＋ほんのりガラス */
  background: color-mix(in oklab, black 42%, transparent);
  backdrop-filter: blur(var(--glass-blur));
  border: 1px solid var(--glass-border);
  /* 内外の二層影：フチが立ちすぎないよう弱めに */
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.06), var(--glass-shadow);
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);
  max-inline-size: 28ch; /* 行が伸びすぎないように */
  text-wrap: balance; /* 気持ちよく改行 */
}

/* 横向きは半歩フラットにして読みやすさ優先 */
@media (orientation: landscape) and (max-width: 736px) {
  .contrast-underline,
  .u-contrast-underline {
    border-radius: clamp(8px, 2.8vw, 12px);
    padding: 0.4em 0.7em;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.06), var(--glass-shadow);
  }
}
@layer debug {}
body {
  color: var(--timer-main-color);
  /* h1 カウントダウン表示 */
  /* 数字だけ相棒フォント + 等幅数字をON */
  /* active：押し込み感を1pxだけ */
  /* スクリーンリーダー専用 */
  /* トースト */
}
body span.icon-size-control {
  color: inherit;
  height: 44px;
}
body .timer {
  width: 100%;
  min-height: 340px;
  margin: 0 auto;
  padding: 0 16px; /* 横に余白 */
}
body .timer-deco {
  background: rgba(0, 0, 0, 0.16);
  border-radius: 16px;
}
@supports (backdrop-filter: blur(1px)) or (-webkit-backdrop-filter: blur(1px)) {
  body .timer-deco {
    backdrop-filter: blur(8px) saturate(140%);
    /* うっすら境界 */
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25), inset 0 0 0 1px rgba(255, 255, 255, 0.35);
  }
}
body .timer-grid-container {
  border: 1px solid red;
  display: grid;
  grid-template-rows: repeat(3, 1fr);
  grid-template-columns: 1fr;
  gap: clamp(8px, 1.5vmin, 16px);
  /* カウント → プリセット → 操作 → ボリューム、の縦並び */
  grid-template-areas: "count" "presets" "controls";
  /* 親要素 */
  width: 100%;
  place-content: center;
}
body .timer1 {
  grid-area: count;
  border: 1px solid red;
}
body .timer-count-display {
  min-width: 5ch;
  max-width: 20vw;
  margin: 0 auto;
}
body .timer_count {
  display: inline-block;
  text-align: center;
  width: 5ch;
  font-size: clamp(48px, 36.732px + 3.005vw, 80px);
  line-height: 1.2;
  background: color-mix(in oklch, var(--milk-white) 5%, transparent);
  border-radius: 0.6rem;
  padding-inline: 0.8rem;
  padding-block: 0.2rem;
  backdrop-filter: blur(3px) saturate(95%) contrast(92%);
}
body .digits {
  font-family: Inter, "Zen Kaku Gothic New", "M PLUS 1p", system-ui;
  font-variant-numeric: tabular-nums; /* 等幅数字 */
  font-feature-settings: "tnum" 1; /* 念のため保険として */
  font-synthesis: none; /* 擬似ボールド/イタリックを抑止して質感維持 */ /* “leaf.loop”の空気感に合わせて極小トラッキング */
  font-weight: 500;
  letter-spacing: 0.0125em;
  color: var(--milk-white);
  text-shadow: 0 0 0.03rem rgba(255, 255, 255, 0.55), 0 0 0.18rem rgba(255, 255, 255, 0.3), 0 0 0.44rem rgba(255, 255, 255, 0.18); /* 遠くのベール */
}
body .timer2 {
  border: 1px solid red;
  grid-area: presets;
}
body .timer3 {
  grid-area: controls;
}
body .timer-toggle,
body .reset-button,
body .volume-toggle {
  position: relative;
  min-width: auto;
  min-height: auto;
  inline-size: 44px;
  block-size: 44px;
  display: inline-grid;
  place-items: center;
}
body .timer-toggle span,
body span.icon-refresh,
body .volume-toggle span {
  grid-area: 1/1;
  width: 100%;
  height: 100%;
}
body .timer-toggle .icon-stop,
body .volume-toggle .icon-alarm-off {
  display: none;
}
body .timer-toggle[aria-pressed=true] .icon-play,
body .volume-toggle[aria-pressed=true] .icon-alarm-on {
  display: none;
}
body .timer-toggle[aria-pressed=true] .icon-stop,
body .volume-toggle[aria-pressed=true] .icon-alarm-off {
  display: block;
}
body .buttons {
  width: 20vw;
  margin: 0 auto;
}
body .buttonsspan {
  display: block;
}
body button {
  margin: 0 auto;
}
body span,
body .button.setTimeBtn {
  color: inherit;
}
body .setTimeBtn {
  display: flex;
  align-items: center;
  justify-content: center;
  border: 0.8px solid rgba(245, 245, 245, 0.18);
  /* 円の大きさ */
  width: clamp(3rem, 4vw, 6rem);
  aspect-ratio: 1/1;
  border-radius: 50%;
  color: inherit;
  text-align: center;
  background-color: var(--panel);
  filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.25));
  /* 内縁ハイライト + 外側の落ち影（ガラスと統一） */
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.16), inset 0 8px 20px rgba(255, 255, 255, 0.06), 0 8px 24px rgba(0, 0, 0, 0.25);
  position: relative;
}
body .setTimeBtn::before {
  content: "";
  position: absolute;
  inset: 2px; /* 内側に1–2pxだけ入れる */
  border-radius: inherit;
  pointer-events: none;
  /* 上半分だけに効く柔らかいグロス */
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.28) 0%, rgba(255, 255, 255, 0.12) 35%, rgba(255, 255, 255, 0) 60%);
  mask: linear-gradient(to bottom, #000 0 60%, transparent 60% 100%);
}
body button.setTimeBtn:hover,
body button.setTimeBtn:focus-visible {
  cursor: pointer;
  color: #606060;
  border: solid 2.27px #f5f5f5;
  background-color: #f5f5f5;
  outline: none;
  box-shadow: 0 0 0 2px rgba(14, 16, 32, 0.75), 0 0 0 3px rgba(255, 255, 255, 0.45), inset 0 0 0 1px rgba(255, 255, 255, 0.3), 0 8px 24px rgba(0, 0, 0, 0.25);
}
body button.setTimeBtn:active {
  transform: translateY(1px);
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.22), inset 0 6px 14px rgba(255, 255, 255, 0.04), 0 4px 12px rgba(0, 0, 0, 0.22);
}
body .set-buttons {
  padding: clamp(4px, 2.592px + 0.376vw, 8px) 0;
  background: rgba(245, 245, 245, 0.3);
  border: 1px solid rgba(245, 245, 245, 0.35);
  border-radius: 16px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
}
body .set-buttons span {
  white-space: nowrap;
  filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.25));
  /* ほんのり輪郭 */
  outline: 1px solid color-mix(in oklab, #fff 35%, transparent);
  outline-offset: -2px;
  border-radius: 0.5rem;
}
body span.set-button:hover {
  cursor: pointer;
  color: #fff;
  text-shadow: 0 4px 4px #000;
  transform: scale(1.02);
  outline: 2px solid color-mix(in oklab, #fff 35%, transparent);
}
body .sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  white-space: nowrap;
  border: 0;
}
body .toast {
  position: absolute;
  left: 50%;
  top: 1rem;
  transform: translateX(-50%) translateY(8px);
  background: rgba(0, 0, 0, 0.84);
  color: #fff;
  padding: 0.5rem 1rem;
  border-radius: 0.75rem;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.25s ease, transform 0.25s ease;
  z-index: 30;
}
body .toast.show {
  opacity: 1;
  transform: translateX(-50%) translateY(0);
}
@media (prefers-reduced-motion: reduce) {
  body .toast {
    transition: none;
  }
}

/* hover（マウス環境だけ少しだけ持ち上げる） */
@media (hover: hover) and (pointer: fine) {
  .setTimeBtn:hover {
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.32), inset 0 10px 24px rgba(255, 255, 255, 0.08), 0 10px 28px rgba(0, 0, 0, 0.28);
    transform: translateY(-0.5px);
  }
}
/* タイマー共通の「色・透明度・ホバー/フォーカス強度」をカスタムプロパティで持つ */
@media screen and (width >= 1100px) and (orientation: landscape) {
  body.hero .timer {
    max-width: 21vw;
    min-width: 21vw;
    height: auto;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  body.hero .timer-grid-container {
    display: grid;
    grid-template-rows: repeat(3, 1fr);
    grid-template-rows: 3fr 1fr 1fr;
    grid-template-columns: 1fr;
    gap: 20px;
    margin: 0 auto;
    align-items: center;
  }
  body.hero .set-buttons {
    padding: clamp(4px, 2.592px + 0.376vw, 8px) 0;
  }
}
@media screen and (width <= 1099px) and (width >= 769px) and (orientation: landscape) {
  body.hero .timer {
    padding: 0;
    min-width: 21vw;
    height: 100vh; /* PCで全画面 */
    height: 100svh; /* モバイルでアドレスバー考慮 */
    display: flex;
    align-items: center;
    justify-content: center;
  }
  body.hero .timer-grid-container {
    display: grid;
    grid-template-rows: repeat(3, 1fr);
    grid-template-rows: 3fr 1fr 1fr;
    grid-template-columns: 1fr;
    gap: 20px;
    margin: 0 auto;
    align-items: center;
  }
  body.hero .timer1 {
    margin-top: 0;
  }
  body.hero .timer_count {
    font-size: clamp(48px, 6vw, 56px);
    line-height: 1.2;
  }
  body.hero .buttons {
    width: 100%;
    margin: 0;
  }
  body.hero .set-buttons {
    padding: 0;
    border-radius: 8px;
  }
}
/* 縦向き：最小値をちょい上げて読みやすさ優先 */
@media screen and (width <= 1024px) and (orientation: portrait) {
  body.hero .item {
    width: 100svw;
    width: 100dvw;
    min-height: auto;
    min-width: fit-content;
    padding: 16px;
    overflow: hidden;
  }
  body.hero .timer {
    width: 100vw;
    min-height: auto;
    min-width: fit-content;
    padding: 16px;
  }
  body.hero .timer-grid-container {
    display: grid;
    grid-template-rows: repeat(3, 1fr);
    grid-template-rows: 3fr 1fr 1fr;
    grid-template-columns: 1fr;
    gap: clamp(16px, 1.5vmin, 20px);
    margin: 0 auto;
    align-items: center;
  }
  body.hero .timer1 {
    margin-top: 0;
    height: auto;
  }
  body.hero .timer-count-display {
    max-width: fit-content;
  }
  body.hero .timer_count {
    width: max-content;
    display: block;
  }
  body.hero .buttons {
    width: 100%;
    max-width: 19rem;
    padding: 0 8px;
  }
  body.hero .grid-parent-timer {
    gap: clamp(8px, 2.2vw, 16px);
  }
  body.hero .setTimeBtn {
    margin: 0 auto;
    min-inline-size: clamp(48px, 11vw, 72px);
    min-block-size: clamp(44px, 9vw, 60px); /* 44pxルール */
    padding-inline: 0.6rem;
    border-radius: 999px;
    line-height: 1.2;
  }
}
@media screen and (width <= 768px) and (orientation: landscape) {
  body.hero .timer {
    padding: 0;
    min-height: 375px;
    height: 100vh; /* PCで全画面 */
    height: 100svh; /* モバイルでアドレスバー考慮 */
    display: flex;
    align-items: center;
    justify-content: center;
  }
  body.hero .timer-grid-container {
    grid-template-rows: 2fr 1fr 1fr;
    grid-area: "count" "preset" "control";
    align-items: center;
    gap: 16px;
  }
  body.hero .timer-count-display {
    max-width: fit-content;
  }
  body.hero .timer1,
  body.hero .timer2,
  body.hero .timer3 {
    padding: 0 16px;
  }
  body.hero .timer1 {
    height: auto;
    margin-top: 0;
  }
  body.hero .timer_count {
    width: max-content;
    display: block;
  }
  body.hero .buttons {
    width: 100%;
    padding: 0 8px;
  }
  body.hero .grid-parent-timer {
    gap: clamp(8px, 2.2vw, 16px);
  }
  body.hero .setTimeBtn {
    margin: 0; /* ← これが肝！ */
    flex: 0 0 auto; /* 勝手に伸びない */
    min-inline-size: clamp(48px, 11vw, 72px);
    min-block-size: clamp(44px, 9vw, 60px); /* 44pxルール */
    padding-inline: 0.6rem;
    border-radius: 999px;
    line-height: 1.2;
  }
}
/* 論理プロパティ非対応ブラウザへのフォールバック */
@supports not (min-inline-size: 1px) {
  .preset .btn {
    min-width: clamp(48px, 11vw, 72px);
    min-height: clamp(44px, 9vw, 60px);
  }
}
/* ===== _info.scss ===== */
.hero__slot--side :where(.info) {
  /* Block本体 */
  /* 1) フォーカス時：背景をほんのり暗く（レイアウト不変） */
  /* アイコンサイズを上書きする */
}
.hero__slot--side :where(.info) .info {
  display: grid;
  gap: var(--space-2); /* 1rem */
}
.hero__slot--side :where(.info) ul.info__list {
  list-style: none; /* リストの点を削除 */
  text-align: right; /* 右寄せ */
  display: flex;
  gap: var(--space-2); /* 1rem */
  margin: 0;
  padding: 0;
}
.hero__slot--side :where(.info) li.info__item {
  display: inline-block;
}
.hero__slot--side :where(.info) .info__link {
  display: inline-flex;
  align-items: center;
  gap: 0.5em;
  inline-size: max-content;
  max-inline-size: min(70vw, 420px);
  padding: 0.6em 1.1em;
  border-radius: 999px;
  backdrop-filter: blur(8px) saturate(140%);
  background: rgba(0, 0, 0, 0.16);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25), inset 0 0 0 1px rgba(255, 255, 255, 0.35);
  color: #f5f5f5;
  font-size: 16px;
  z-index: 2;
}
.hero__slot--side :where(.info) .info a.info__link,
.hero__slot--side :where(.info) .info button.info__link {
  display: inline-block; /* 中身サイズにフィット（幅は変えない） */
  text-decoration: none; /* 通常は下線オフ */
}
.hero__slot--side :where(.info) .info a:focus-visible .info__link,
.hero__slot--side :where(.info) .info button.info__link:focus-visible {
  /* 任意：あなたのトークンに置き換え可 */
  background-color: rgba(0, 0, 0, 0.1); /* or var(--focus-bg, rgb(0 0 0 / .10)) */
  /* 視認性UPのための微弱な影（レイアウト不変） */
  box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.25) inset;
}
.hero__slot--side :where(.info) .info__link:focus-visible {
  outline: 2px solid var(--focus-ring, #7aa2ff);
  outline-offset: 2px;
  text-decoration: underline;
  text-underline-offset: 2px;
  text-decoration-thickness: 2px; /* 太めで見えやすく */
}
@media (hover: hover) {
  .hero__slot--side :where(.info) {
    /* ホバーと揃えたい場合はお好みで */
    /* 既存の :focus で outline: none; が入ってたら消すか、上書きで無効化 */
  }
  .hero__slot--side :where(.info) .info a:hover .info__link {
    background-color: rgba(0, 0, 0, 0.06);
  }
  .hero__slot--side :where(.info) .info a:hover,
  .hero__slot--side :where(.info) .info a:focus {
    outline: none;
    text-decoration: underline;
  }
  .hero__slot--side :where(.info) .info__link:hover {
    filter: brightness(1.3);
    text-decoration: underline;
    cursor: pointer;
  }
}
.hero__slot--side :where(.info) span.help-icon-size {
  font-size: 1rem;
}

.info-help-card[hidden] {
  display: none;
}

.info-help-card {
  position: fixed;
  top: 0;
  right: -100%;
  transition: transform 0.4s ease, right 0.4s ease;
  z-index: 10;
  /* アイコンサイズを上書きする */
}
.info-help-card span.help-icon-size {
  font-size: 2rem;
  display: inline-block;
  vertical-align: middle;
  color: var(--help-icon);
}

.info-help-card.is-open {
  right: 0;
}

.info-hidden {
  display: none;
}

/* ヘルプエリア w h */
.info-help-container {
  width: min(90vw, 360px); /* スマホなら90%、PCなら最大320px */
  height: auto;
}

/* 背景 */
/* Moss */
.theme-moss {
  --help-bg: rgb(24 36 28 / 72%);
  --help-fg: #ebf3ef;
  --help-h: #fff;
  --help-border: rgb(196 214 205 / 35%);
  --help-icon: #c8e5d6;
}

/* Dew */
.theme-dew {
  --help-bg: rgb(240 245 243 / 82%);
  --help-fg: #1e2b4f;
  --help-h: #0b1c39;
  --help-border: rgb(11 28 57 / 15%);
  --help-icon: #0e1020;
}

.visual-card-help-bg {
  border-radius: 20px;
  background: var(--help-bg);
  border: 1px solid var(--help-border);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.35);
}

.visual-card-help-bg:hover {
  background: rgba(0, 0, 0, 0.55);
  transition: background 0.3s ease-in;
}

.help-content {
  padding: 1rem;
  color: var(--help-fg);
  text-decoration: none;
  font-size: 1rem;
  line-height: 1.6;
  text-align: left;
}
.help-content p {
  padding-left: 0.8rem;
}

.flex-parent-help-h {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.6;
  padding: 0.5rem;
  text-align: center;
}
.flex-parent-help-h h2 {
  display: block;
}
.flex-parent-help-h span.help-icon {
  margin-right: 10px;
}

.info-help-card button.close-button {
  text-align: center;
  margin: 0;
}

.info-help-card .close-button {
  color: var(--help-icon);
  font-size: 1.4rem;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background: rgba(96, 96, 96, 0.38);
  display: flex;
  align-items: center;
  justify-content: center;
}

.info-help-card .close-button:hover {
  background-color: #606060;
  scale: 105%;
  cursor: pointer;
}

.info-help-card .close-button:focus-visible {
  text-decoration-thickness: 2px; /* 太めで見えやすく */
  outline: 2px solid currentcolor;
  outline-offset: 4px;
}

.info-help-card h3 {
  line-height: 1.8; /* フォントサイズの1.5倍に設定 */
  margin-block: 0.25rem 0.5rem;
  color: #b4d2ea;
}

.info-line-spacing {
  margin: 6px 0;
}

.info-help-card span.p-icon-size {
  font-size: 1.2rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 0.2rem;
  line-height: 1.5;
  color: var(--help-icon);
  opacity: 0.9;
}

.flex-parent-help-p {
  display: flex;
  justify-content: left;
  align-items: center;
  text-align: left;
  margin-block: 0.1rem;
}

@media screen and (max-height: 500px) and (orientation: landscape) {
  body {
    /* ヘルプエリア w h */
  }
  body .info-help-container {
    width: 90vw;
    height: auto;
  }
  body .flex-parent-help-unit {
    display: flex;
    justify-content: left;
    align-items: center;
    text-align: left;
  }
  body .wrap-help-unit-l {
    width: 50%;
  }
  body .wrap-help-unit-r {
    width: 50%;
    border: 1px solid #f0f0f0;
    padding: 0.4rem;
    border-radius: 8px;
  }
}
.mini-help {
  position: fixed;
  right: 12px;
  bottom: 88px;
  z-index: 60;
}

.mini-help > summary {
  list-style: none;
  cursor: pointer;
  width: 36px;
  height: 36px;
  border-radius: 999px;
  display: grid;
  place-items: center;
  background: rgba(14, 16, 32, 0.35);
  color: #fff;
  backdrop-filter: blur(6px);
  border: 1px solid rgba(255, 255, 255, 0.18);
}

.mini-help[open] > summary {
  visibility: hidden;
} /* カード表示時は?隠す */
.mini-help__card {
  min-width: 220px;
  max-width: 280px;
  background: var(--timer-surface);
  color: var(--timer-fg);
  border: 1px solid var(--timer-border);
  border-radius: 12px;
  box-shadow: var(--timer-shadow);
  padding: 12px 14px;
  backdrop-filter: blur(10px) saturate(140%);
}

.mini-help__card ul {
  margin: 6px 0 10px;
  padding-left: 1em;
}

.mini-help__close {
  width: 100%;
  border-radius: 8px;
}

@media (prefers-reduced-motion: reduce) {
  .mini-help__card {
    transition: none;
  }
}
body.hero {
  position: relative;
  isolation: isolate;
  font-size: var(--text-hero);
  overflow-x: hidden;
  color: #f5f5f5;
  /* 親全体を覆う半透明オーバーレイ（パディングも含めてカバー） */
  /* 背景メディアは最背面 <div> */
  /* 既定は静止画だけを見せる */
  /* コンテンツ/UIは前面へ */
  /* メインコンテンツ 動画より前 新 */
  /* タイルの中身の潰れ対策（共通） 新*/
}
body.hero::before {
  content: "";
  position: fixed;
  inset: 0; /* ← padding-box まできっちり覆う */
  pointer-events: none;
  z-index: -1;
  background: linear-gradient(to right, rgba(200, 211, 192, 0.4), rgba(200, 211, 192, 0.4)), rgb(0, 0, 0, var(--hero-veil, 0.28));
  mix-blend-mode: multiply;
  will-change: transform;
  transform: translateZ(0);
  backface-visibility: hidden;
}
body.hero .hero__media-body {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: -2;
}
body.hero .hero__media-body > video,
body.hero .hero__media-body > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  inline-size: 100%;
}
body.hero #background-video {
  position: fixed; /* もしくは absolute + 親を relative + inset:0 */
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover; /* ← これが決定打（posterにも効く） */
  object-position: center;
  z-index: -2;
  top: 0;
  left: 0;
}
body.hero .hero__media-video {
  display: none;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
body.hero .hero__media-poster {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
body.hero .hero .hero__grid,
body.hero .notify-controls {
  position: relative;
  z-index: 0;
}
body.hero header.site-header {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
}
body.hero .site-header__title {
  font-size: clamp(1.1rem, 3.2vw, 3rem);
  line-height: 1.15;
  letter-spacing: 0.02em;
  margin: 1rem 1.25rem;
  text-wrap: balance; /* 対応ブラウザで見栄えUP */
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.25);
  /* stylelint-disable-next-line scss/double-slash-comment-empty-line-before */
  white-space: nowrap;
}
@supports (backdrop-filter: blur(2px)) {
  body.hero .site-header__title .site-header__title {
    backdrop-filter: blur(2px);
    background: color-mix(in oklab, #000 6%, transparent);
    padding-inline: 0.5rem;
    border-radius: 0.5rem;
  }
}
body.hero .hero__inner {
  width: 100%;
  height: 100vh;
}
body.hero.hero__content,
body.hero .hero__content {
  position: relative;
  z-index: 0;
}
body.hero .hero__grid {
  display: grid;
  align-items: stretch;
  /* デスクトップ */
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: minmax(192px, 1fr);
  grid-template-areas: "item1 item2 item3 item4";
}
body.hero .hero__slot {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  display: grid;
  place-items: center;
  height: 100%;
  min-width: 21vw;
  min-height: 160px;
}
body.hero .hero__slot--timer {
  grid-area: item1;
}
body.hero .hero__slot--gallery {
  grid-area: item2;
}
body.hero .hero__slot--universe {
  grid-area: item3;
}
body.hero .hero__slot--cta {
  grid-area: item4;
}
body.hero .hero__slot--side {
  grid-area: item5;
}
body.hero .hero__slot--gallery,
body.hero .hero__slot--universe {
  position: relative;
}
body.hero .nav-tile {
  /* 同宣言 */
  position: relative;
  width: 100%;
  height: 100%;
  /* reusable block アンカー・中央寄せ・ヒットエリア */
  display: grid;
  place-items: center;
  text-decoration: none;
  position: relative; /* for ::before layers on label if needed */
  min-height: var(--tile-min-h, 12rem);
}
body.hero .nav-tile__media {
  position: absolute;
  inset: 0;
  z-index: 0;
  opacity: 0;
  transition: opacity 0.3s;
}
body.hero .nav-tile__text {
  opacity: 1;
  font-size: clamp(18px, 1.97vw, 20px);
  text-align: center;
}
body.hero .nav-tile--gallery .nav-tile__media,
body.hero .nav-tile--universe .nav-tile__media {
  /* 背景・フィルタ */
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  filter: brightness(1);
  opacity: 0.5;
  z-index: 0;
}
body.hero .nav-tile--gallery {
  background: transparent;
}
body.hero .nav-tile--universe {
  background: transparent;
}
body.hero .nav-tile--gallery .nav-tile__media:not(span),
body.hero .nav-tile--universe .nav-tile__media:not(span) {
  opacity: 0.9;
}
body.hero .nav-tile:hover .nav-tile__text,
body.hero .nav-tile:focus-visible .nav-tile__text {
  text-decoration: underline;
  filter: brightness(1.1);
}
body.hero .nav-tile:hover.nav-tile--gallery,
body.hero .nav-tile:focus-visible.nav-tile--gallery {
  background: linear-gradient(to top, rgba(237, 224, 212, 0.326), rgba(191, 192, 185, 0.612), rgba(153, 147, 138, 0.898), rgba(142, 136, 128, 0.342), rgba(125, 124, 120, 0.227)), url("../assets/png/hero/frame_02_gallery_mobile.png");
  filter: brightness(1.2);
  opacity: 0.8;
}
body.hero .nav-tile:hover.nav-tile--universe,
body.hero .nav-tile:focus-visible.nav-tile--universe {
  background: linear-gradient(to bottom, rgb(27, 38, 59) 40%, rgba(15, 26, 43, 0) 100%);
  filter: brightness(1.1);
  opacity: 1;
}
body.hero .hero__subheading {
  font-size: clamp(1rem, 2vw, 1.25rem);
  white-space: nowrap;
}
body.hero .hero__head {
  display: grid;
  gap: 6vh;
  text-align: center;
}

@media screen and (width >= 769px) and (orientation: landscape) {
  body.hero {
    overflow-y: scroll;
  }
  body.hero .hero__slot--side.hero__slot {
    width: fit-content;
    min-height: auto;
  }
  body.hero .hero__slot--side {
    grid-area: item5;
    position: absolute;
    z-index: 2;
    right: clamp(12px, 3vmin, 28px);
    bottom: clamp(16px, 3vmin, 28px);
    height: auto;
  }
}
/* スマホ縦：1列積み */
@media (width <= 1024px) and (orientation: portrait) {
  body.hero {
    /* 自然スクロール + 下部安全域 */
    padding-block: clamp(48px, 8svh, 96px);
    padding-bottom: max(16px, env(safe-area-inset-bottom));
    /* 背景レイヤーの土台：ページの一番うしろに固定 */
    /* 動画を“縦にも横にも”はみ出しつつ全面カバー */
    /* 新しい単位が使える環境では、動的vhでより正確に */
    /* 共通（高さを中身に任せる等） */
  }
  body.hero .hero__media-body {
    position: fixed; /* 画面に固定（スクロールしても動かない） */
  }
  body.hero #background-video {
    height: 100svh; /* まずは小さいvh（アドレスバー配慮） */
  }
  @supports (height: 100dvh) {
    body.hero #background-video {
      height: 100dvh;
    }
  }
  body.hero .site-header__title h1 {
    white-space: nowrap;
  }
  body.hero .hero__inner {
    width: 100%;
    height: auto;
  }
  body.hero .hero__grid {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-areas: "item4" "item1" "item2" "item3" "item5"; /* ヘルプ等 */
    gap: 1rem;
    align-items: start;
  }
  body.hero .hero__slot {
    min-height: auto; /* なくても既定はauto。書くならこの1行だけを共通に */
  }
  body.hero .hero__slot--timer {
    grid-area: item1;
    height: fit-content;
    min-height: clamp(200px, var(--vh) * 40, 360px);
  }
  body.hero .hero__slot--gallery {
    grid-area: item2;
  }
  body.hero .hero__slot--universe {
    grid-area: item3;
  }
  body.hero .hero__slot--cta {
    grid-area: item4;
    min-height: clamp(120px, var(--vh) * 25, 280px);
  }
  body.hero .hero__slot--side {
    grid-area: item5;
    position: unset;
    z-index: unset;
    width: fit-content;
    height: auto;
    margin: 1rem auto;
  }
  body.hero a.nav-tile__media {
    width: fit-content;
  }
  body.hero .nav-tile--gallery .nav-tile__media,
  body.hero .nav-tile--universe .nav-tile__media {
    min-height: 10dvh;
    min-height: 10svh;
    background: none;
    filter: unset;
  }
  body.hero .nav-tile__label {
    position: relative;
    z-index: 2;
    padding: 0.6em 1em;
    white-space: nowrap;
  }
  body.hero .nav-tile__label::before {
    content: "";
    position: absolute;
    inset: -6px -12px;
    border-radius: 12px;
    backdrop-filter: blur(140px);
    z-index: -1;
  }
  body.hero .nav-tile--gallery .nav-tile__media:hover,
  body.hero .nav-tile--universe .nav-tile__media:hover {
    background: transparent;
    filter: unset;
    opacity: 1;
  }
  body.hero .nav-tile {
    display: inline-grid; /* ブロック→インライン化で横幅が内容起点に */
    place-self: start center;
    /* 親グリッドに対して左上寄せ（stretch無効化） */
    width: max-content; /* 内容幅にフィット（fit-content より狙いが明確） */
    place-items: center;
    text-decoration: none;
    position: relative;
    /* for ::before layers on label if needed */
    min-height: var(--tile-min-h, 12rem);
  }
  body.hero .hero__subheading {
    font-size: clamp(1.25rem, 2.7vw, 1.5rem);
    white-space: nowrap;
  }
  body.hero .text {
    gap: 3vh;
  }
  body.hero .hero__head {
    gap: 3vh;
  }
}
@media screen and (width <= 768px) and (orientation: landscape) {
  body.hero {
    /* アドレスバーを考慮 */
    min-height: 100svh;
    /* スクロール終端のチラ見え対策（ツールバー連動/ゴムスクロール） */
    background: var(--page-bg, #0b1c39); /* 画像最暗部に合わせる */
    overscroll-behavior-y: contain; /* iOS16+ で有効 */
    /* ヘッダー */
    /* すぅ〜 */
  }
  body.hero::before {
    transform: none !important;
    will-change: auto !important;
  }
  body.hero .hero__media-poster {
    position: fixed;
    will-change: transform; /* スクロールでの再描画を軽減 */
    contain: paint; /* 塗り分離で影響範囲を限定 */
    backface-visibility: hidden; /* レイヤ合成の安定化 */
  }
  body.hero header.site-header {
    position: sticky;
    top: calc(env(safe-area-inset-top, 0) + 0.5rem);
    z-index: 2;
  }
  body.hero .site-header__title h1 {
    font-size: clamp(1rem, 2.6vw, 2rem);
    letter-spacing: 0.01em;
    line-height: 1.15;
    max-inline-size: 18ch;
    white-space: nowrap;
  }
  body.hero .hero__inner {
    width: 100%;
    height: auto;
  }
  body.hero .hero__grid {
    grid-template: "item1 item4" 1fr "item1 item2" 1fr "item1 item3" 1fr "item1 item5" 3rem;
    gap: clamp(12px, 2svh, 24px);
    overflow: auto;
  }
  body.hero .nav-tile {
    display: grid;
    place-items: center;
    text-decoration: none;
    position: relative; /* for ::before layers on label if needed */
    min-height: var(--tile-min-h, 12rem);
  }
  body.hero .hero__slot--timer {
    min-height: 375px;
    height: auto;
  }
  body.hero .hero__slot--gallery,
  body.hero .hero__slot--universe,
  body.hero .hero__slot--side {
    min-height: auto;
  }
  body.hero .hero__slot--cta {
    padding-top: 1rem;
    width: 100%;
    height: 40vh;
  }
  body.hero .hero__slot--side {
    position: unset;
    z-index: unset;
    width: fit-content;
    height: auto;
    align-items: center;
    margin: 0 auto;
  }
  body.hero .hero__slot > .hero__bg--gallery:hover,
  body.hero .hero__slot > .hero__bg--universe:hover {
    background: transparent;
    filter: unset;
    opacity: 1;
  }
  body.hero .nav-tile__label {
    position: relative;
    z-index: 1;
    padding: 0.6em 1em;
  }
  body.hero .nav-tile__label::before {
    content: "";
    position: absolute;
    inset: -6px -12px;
    border-radius: 12px;
    backdrop-filter: blur(140px);
    z-index: -1;
  }
  body.hero .hero__heading img {
    height: auto; /* 高さは幅に合わせて自動調整 */
  }
  body.hero .hero__subheading {
    font-size: clamp(1.25rem, 2.7vw, 1.5rem);
    white-space: nowrap;
  }
}
/* 横向き スマホ */
@media (orientation: landscape) and (max-height: 600px) {
  header.site-header {
    font-size: clamp(1rem, 2.6vw, 2rem);
    letter-spacing: 0.01em;
    line-height: 1.15;
    max-inline-size: 18ch;
  }
}/*# sourceMappingURL=style.css.map */